{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/warn-once.mjs"],"sourcesContent":["const warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n"],"names":[],"mappings":";;;;AAAA,MAAM,SAAS,IAAI;AACnB,SAAS,UAAU,OAAO;IACtB,OAAO,OAAO,GAAG,CAAC;AACtB;AACA,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO;IACzC,IAAI,aAAa,OAAO,GAAG,CAAC,UACxB;IACJ,QAAQ,IAAI,CAAC;IACb,IAAI,SACA,QAAQ,IAAI,CAAC;IACjB,OAAO,GAAG,CAAC;AACf","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/noop.mjs"],"sourcesContent":["/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n"],"names":[],"mappings":"AAAA,sBAAsB;;;AACtB,MAAM,OAAO,CAAC,MAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/global-config.mjs"],"sourcesContent":["const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n"],"names":[],"mappings":";;;AAAA,MAAM,qBAAqB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/array.mjs"],"sourcesContent":["function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n"],"names":[],"mappings":";;;;;AAAA,SAAS,cAAc,GAAG,EAAE,IAAI;IAC5B,IAAI,IAAI,OAAO,CAAC,UAAU,CAAC,GACvB,IAAI,IAAI,CAAC;AACjB;AACA,SAAS,WAAW,GAAG,EAAE,IAAI;IACzB,MAAM,QAAQ,IAAI,OAAO,CAAC;IAC1B,IAAI,QAAQ,CAAC,GACT,IAAI,MAAM,CAAC,OAAO;AAC1B;AACA,0BAA0B;AAC1B,SAAS,SAAS,CAAC,GAAG,IAAI,EAAE,SAAS,EAAE,OAAO;IAC1C,MAAM,aAAa,YAAY,IAAI,IAAI,MAAM,GAAG,YAAY;IAC5D,IAAI,cAAc,KAAK,aAAa,IAAI,MAAM,EAAE;QAC5C,MAAM,WAAW,UAAU,IAAI,IAAI,MAAM,GAAG,UAAU;QACtD,MAAM,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,WAAW;QACrC,IAAI,MAAM,CAAC,UAAU,GAAG;IAC5B;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/subscription-manager.mjs"],"sourcesContent":["import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;IACF,aAAc;QACV,IAAI,CAAC,aAAa,GAAG,EAAE;IAC3B;IACA,IAAI,OAAO,EAAE;QACT,CAAA,GAAA,uJAAA,CAAA,gBAAa,AAAD,EAAE,IAAI,CAAC,aAAa,EAAE;QAClC,OAAO,IAAM,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAD,EAAE,IAAI,CAAC,aAAa,EAAE;IAChD;IACA,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACZ,MAAM,mBAAmB,IAAI,CAAC,aAAa,CAAC,MAAM;QAClD,IAAI,CAAC,kBACD;QACJ,IAAI,qBAAqB,GAAG;YACxB;;aAEC,GACD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,GAAG;QAChC,OACK;YACD,IAAK,IAAI,IAAI,GAAG,IAAI,kBAAkB,IAAK;gBACvC;;;iBAGC,GACD,MAAM,UAAU,IAAI,CAAC,aAAa,CAAC,EAAE;gBACrC,WAAW,QAAQ,GAAG,GAAG;YAC7B;QACJ;IACJ;IACA,UAAU;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM;IACpC;IACA,QAAQ;QACJ,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG;IAChC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/velocity-per-second.mjs"],"sourcesContent":["/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n"],"names":[],"mappings":"AAAA;;;;;AAKA;;;AACA,SAAS,kBAAkB,QAAQ,EAAE,aAAa;IAC9C,OAAO,gBAAgB,WAAW,CAAC,OAAO,aAAa,IAAI;AAC/D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/errors.mjs"],"sourcesContent":["let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n"],"names":[],"mappings":";;;;AAAA,IAAI,UAAU,KAAQ;AACtB,IAAI,YAAY,KAAQ;AACxB,wCAA2C;IACvC,UAAU,CAAC,OAAO;QACd,IAAI,CAAC,SAAS,OAAO,YAAY,aAAa;YAC1C,QAAQ,IAAI,CAAC;QACjB;IACJ;IACA,YAAY,CAAC,OAAO;QAChB,IAAI,CAAC,OAAO;YACR,MAAM,IAAI,MAAM;QACpB;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/pipe.mjs"],"sourcesContent":["/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACD,MAAM,mBAAmB,CAAC,GAAG,IAAM,CAAC,IAAM,EAAE,EAAE;AAC9C,MAAM,OAAO,CAAC,GAAG,eAAiB,aAAa,MAAM,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/clamp.mjs"],"sourcesContent":["const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n"],"names":[],"mappings":";;;AAAA,MAAM,QAAQ,CAAC,KAAK,KAAK;IACrB,IAAI,IAAI,KACJ,OAAO;IACX,IAAI,IAAI,KACJ,OAAO;IACX,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GACD,sBAAsB;;;;AACtB,MAAM,wBAAwB,CAAC,UAAY,UAAU;AACrD,sBAAsB,GACtB,MAAM,wBAAwB,CAAC,eAAiB,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs"],"sourcesContent":["import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from GaÃ«tan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n"],"names":[],"mappings":";;;AAAA;;AAEA;;;;;;;;;;;;;;;;AAgBA,GACA,iEAAiE;AACjE,MAAM,aAAa,CAAC,GAAG,IAAI,KAAO,CAAC,CAAC,CAAC,MAAM,MAAM,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC,IAAI,IAAI,MAAM,EAAE,IACvG;AACJ,MAAM,uBAAuB;AAC7B,MAAM,2BAA2B;AACjC,SAAS,gBAAgB,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG;IACxD,IAAI;IACJ,IAAI;IACJ,IAAI,IAAI;IACR,GAAG;QACC,WAAW,aAAa,CAAC,aAAa,UAAU,IAAI;QACpD,WAAW,WAAW,UAAU,KAAK,OAAO;QAC5C,IAAI,WAAW,KAAK;YAChB,aAAa;QACjB,OACK;YACD,aAAa;QACjB;IACJ,QAAS,KAAK,GAAG,CAAC,YAAY,wBAC1B,EAAE,IAAI,yBAA0B;IACpC,OAAO;AACX;AACA,SAAS,YAAY,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACnC,qDAAqD;IACrD,IAAI,QAAQ,OAAO,QAAQ,KACvB,OAAO,sJAAA,CAAA,OAAI;IACf,MAAM,WAAW,CAAC,KAAO,gBAAgB,IAAI,GAAG,GAAG,KAAK;IACxD,wDAAwD;IACxD,OAAO,CAAC,IAAM,MAAM,KAAK,MAAM,IAAI,IAAI,WAAW,SAAS,IAAI,KAAK;AACxE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/ease.mjs"],"sourcesContent":["import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,SAAS,WAAW,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE,MAAM,GAAG,GAAG;AACrD,MAAM,UAAU,WAAW,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE,GAAG,GAAG,MAAM;AACtD,MAAM,YAAY,WAAW,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE,MAAM,GAAG,MAAM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs"],"sourcesContent":["const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n"],"names":[],"mappings":";;;AAAA,MAAM,gBAAgB,CAAC;IACnB,OAAO,MAAM,OAAO,CAAC,SAAS,OAAO,IAAI,CAAC,EAAE,KAAK;AACrD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs"],"sourcesContent":["// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n"],"names":[],"mappings":"AAAA,oFAAoF;AACpF,iEAAiE;;;;AACjE,MAAM,eAAe,CAAC,SAAW,CAAC,IAAM,KAAK,MAAM,OAAO,IAAI,KAAK,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs"],"sourcesContent":["// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n"],"names":[],"mappings":"AAAA,iFAAiF;AACjF,6BAA6B;;;;AAC7B,MAAM,gBAAgB,CAAC,SAAW,CAAC,IAAM,IAAI,OAAO,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/back.mjs"],"sourcesContent":["import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,UAAU,WAAW,GAAG,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE,MAAM,MAAM,MAAM;AAC5D,MAAM,SAAS,WAAW,GAAG,CAAA,GAAA,gLAAA,CAAA,gBAAa,AAAD,EAAE;AAC3C,MAAM,YAAY,WAAW,GAAG,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/anticipate.mjs"],"sourcesContent":["import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,CAAC,IAAM,CAAC,KAAK,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,gKAAA,CAAA,SAAM,AAAD,EAAE,KAAK,MAAM,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/circ.mjs"],"sourcesContent":["import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEA,MAAM,SAAS,CAAC,IAAM,IAAI,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC;AAC7C,MAAM,UAAU,CAAA,GAAA,gLAAA,CAAA,gBAAa,AAAD,EAAE;AAC9B,MAAM,YAAY,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs"],"sourcesContent":["const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n"],"names":[],"mappings":";;;AAAA,MAAM,qBAAqB,CAAC,SAAW,MAAM,OAAO,CAAC,WAAW,OAAO,MAAM,CAAC,EAAE,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/easing/utils/map.mjs"],"sourcesContent":["import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,eAAe;IACjB,QAAQ,sJAAA,CAAA,OAAI;IACZ,QAAA,gKAAA,CAAA,SAAM;IACN,WAAA,gKAAA,CAAA,YAAS;IACT,SAAA,gKAAA,CAAA,UAAO;IACP,QAAA,gKAAA,CAAA,SAAM;IACN,WAAA,gKAAA,CAAA,YAAS;IACT,SAAA,gKAAA,CAAA,UAAO;IACP,QAAA,gKAAA,CAAA,SAAM;IACN,WAAA,gKAAA,CAAA,YAAS;IACT,SAAA,gKAAA,CAAA,UAAO;IACP,YAAA,sKAAA,CAAA,aAAU;AACd;AACA,MAAM,gBAAgB,CAAC;IACnB,OAAO,OAAO,WAAW;AAC7B;AACA,MAAM,6BAA6B,CAAC;IAChC,IAAI,CAAA,GAAA,+LAAA,CAAA,qBAAkB,AAAD,EAAE,aAAa;QAChC,kDAAkD;QAClD,CAAA,GAAA,wJAAA,CAAA,YAAS,AAAD,EAAE,WAAW,MAAM,KAAK,GAAG,CAAC,uDAAuD,CAAC;QAC5F,MAAM,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG;QACzB,OAAO,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD,EAAE,IAAI,IAAI,IAAI;IACnC,OACK,IAAI,cAAc,aAAa;QAChC,yBAAyB;QACzB,CAAA,GAAA,wJAAA,CAAA,YAAS,AAAD,EAAE,YAAY,CAAC,WAAW,KAAK,WAAW,CAAC,qBAAqB,EAAE,WAAW,CAAC,CAAC;QACvF,OAAO,YAAY,CAAC,WAAW;IACnC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/progress.mjs"],"sourcesContent":["/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWA,GACA,sBAAsB;;;AACtB,MAAM,WAAW,CAAC,MAAM,IAAI;IACxB,MAAM,mBAAmB,KAAK;IAC9B,OAAO,qBAAqB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI;AACzD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/memo.mjs"],"sourcesContent":["/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n"],"names":[],"mappings":"AAAA,sBAAsB;;;AACtB,SAAS,KAAK,QAAQ;IAClB,IAAI;IACJ,OAAO;QACH,IAAI,WAAW,WACX,SAAS;QACb,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/is-object.mjs"],"sourcesContent":["function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n"],"names":[],"mappings":";;;AAAA,SAAS,SAAS,KAAK;IACnB,OAAO,OAAO,UAAU,YAAY,UAAU;AAClD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/is-numerical-string.mjs"],"sourcesContent":["/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACD,MAAM,oBAAoB,CAAC,IAAM,+BAA+B,IAAI,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/motion-utils/dist/es/is-zero-value-string.mjs"],"sourcesContent":["/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACD,MAAM,oBAAoB,CAAC,IAAM,cAAc,IAAI,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n"],"names":[],"mappings":"AAAA;AAEA,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40swc/helpers/cjs/_interop_require_wildcard.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n"],"names":[],"mappings":"AAAA;AAEA,SAAS,yBAAyB,WAAW;IACzC,IAAI,OAAO,YAAY,YAAY,OAAO;IAE1C,IAAI,oBAAoB,IAAI;IAC5B,IAAI,mBAAmB,IAAI;IAE3B,OAAO,CAAC,2BAA2B,SAAS,WAAW;QACnD,OAAO,cAAc,mBAAmB;IAC5C,CAAC,EAAE;AACP;AACA,SAAS,0BAA0B,GAAG,EAAE,WAAW;IAC/C,IAAI,CAAC,eAAe,OAAO,IAAI,UAAU,EAAE,OAAO;IAClD,IAAI,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO;QAAE,SAAS;IAAI;IAEhG,IAAI,QAAQ,yBAAyB;IAErC,IAAI,SAAS,MAAM,GAAG,CAAC,MAAM,OAAO,MAAM,GAAG,CAAC;IAE9C,IAAI,SAAS;QAAE,WAAW;IAAK;IAC/B,IAAI,wBAAwB,OAAO,cAAc,IAAI,OAAO,wBAAwB;IAEpF,IAAK,IAAI,OAAO,IAAK;QACjB,IAAI,QAAQ,aAAa,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,MAAM;YACrE,IAAI,OAAO,wBAAwB,OAAO,wBAAwB,CAAC,KAAK,OAAO;YAC/E,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,OAAO,cAAc,CAAC,QAAQ,KAAK;iBAClE,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;QAC/B;IACJ;IAEA,OAAO,OAAO,GAAG;IAEjB,IAAI,OAAO,MAAM,GAAG,CAAC,KAAK;IAE1B,OAAO;AACX;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/zustand/esm/vanilla.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI;IACJ,MAAM,YAAY,aAAa,GAAG,IAAI;IACtC,MAAM,WAAW,CAAC,SAAS;QACzB,MAAM,YAAY,OAAO,YAAY,aAAa,QAAQ,SAAS;QACnE,IAAI,CAAC,OAAO,EAAE,CAAC,WAAW,QAAQ;YAChC,MAAM,gBAAgB;YACtB,QAAQ,CAAC,WAAW,OAAO,UAAU,OAAO,cAAc,YAAY,cAAc,IAAI,IAAI,YAAY,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO;YACjI,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS,OAAO;QAClD;IACF;IACA,MAAM,WAAW,IAAM;IACvB,MAAM,kBAAkB,IAAM;IAC9B,MAAM,YAAY,CAAC;QACjB,UAAU,GAAG,CAAC;QACd,OAAO,IAAM,UAAU,MAAM,CAAC;IAChC;IACA,MAAM,MAAM;QAAE;QAAU;QAAU;QAAiB;IAAU;IAC7D,MAAM,eAAe,QAAQ,YAAY,UAAU,UAAU;IAC7D,OAAO;AACT;AACA,MAAM,cAAc,CAAC,cAAgB,cAAc,gBAAgB,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/zustand/esm/react.mjs"],"sourcesContent":["import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,WAAW,CAAC,MAAQ;AAC1B,SAAS,SAAS,GAAG,EAAE,WAAW,QAAQ;IACxC,MAAM,QAAQ,qMAAA,CAAA,UAAK,CAAC,oBAAoB,CACtC,IAAI,SAAS,EACb,IAAM,SAAS,IAAI,QAAQ,KAC3B,IAAM,SAAS,IAAI,eAAe;IAEpC,qMAAA,CAAA,UAAK,CAAC,aAAa,CAAC;IACpB,OAAO;AACT;AACA,MAAM,aAAa,CAAC;IAClB,MAAM,MAAM,CAAA,GAAA,0IAAA,CAAA,cAAW,AAAD,EAAE;IACxB,MAAM,gBAAgB,CAAC,WAAa,SAAS,KAAK;IAClD,OAAO,MAAM,CAAC,eAAe;IAC7B,OAAO;AACT;AACA,MAAM,SAAS,CAAC,cAAgB,cAAc,WAAW,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40babel/runtime/helpers/extends.js"],"sourcesContent":["function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":[],"mappings":"AAAA,SAAS;IACP,OAAO,OAAO,OAAO,GAAG,WAAW,uCAAgB,OAAO,MAAM,CAAC,IAAI,2CAMlE,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO,EAAE,SAAS,KAAK,CAAC,MAAM;AACxG;AACA,OAAO,OAAO,GAAG,UAAU,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40babel/runtime/helpers/typeof.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":[],"mappings":"AAAA,SAAS,QAAQ,CAAC;IAChB;IAEA,OAAO,OAAO,OAAO,GAAG,UAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,QAAQ,GAAG,SAAU,CAAC;QAC/G,OAAO,OAAO;IAChB,IAAI,SAAU,CAAC;QACb,OAAO,KAAK,cAAc,OAAO,UAAU,EAAE,WAAW,KAAK,UAAU,MAAM,OAAO,SAAS,GAAG,WAAW,OAAO;IACpH,GAAG,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO,EAAE,QAAQ;AAC3F;AACA,OAAO,OAAO,GAAG,SAAS,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40babel/runtime/helpers/toPrimitive.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":[],"mappings":"AAAA,IAAI,UAAU,yGAAsB,CAAC,UAAU;AAC/C,SAAS,YAAY,CAAC,EAAE,CAAC;IACvB,IAAI,YAAY,QAAQ,MAAM,CAAC,GAAG,OAAO;IACzC,IAAI,IAAI,CAAC,CAAC,OAAO,WAAW,CAAC;IAC7B,IAAI,KAAK,MAAM,GAAG;QAChB,IAAI,IAAI,EAAE,IAAI,CAAC,GAAG,KAAK;QACvB,IAAI,YAAY,QAAQ,IAAI,OAAO;QACnC,MAAM,IAAI,UAAU;IACtB;IACA,OAAO,CAAC,aAAa,IAAI,SAAS,MAAM,EAAE;AAC5C;AACA,OAAO,OAAO,GAAG,aAAa,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40babel/runtime/helpers/toPropertyKey.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":[],"mappings":"AAAA,IAAI,UAAU,yGAAsB,CAAC,UAAU;AAC/C,IAAI;AACJ,SAAS,cAAc,CAAC;IACtB,IAAI,IAAI,YAAY,GAAG;IACvB,OAAO,YAAY,QAAQ,KAAK,IAAI,IAAI;AAC1C;AACA,OAAO,OAAO,GAAG,eAAe,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/%40babel/runtime/helpers/defineProperty.js"],"sourcesContent":["var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":[],"mappings":"AAAA,IAAI;AACJ,SAAS,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9B,OAAO,CAAC,IAAI,cAAc,EAAE,KAAK,IAAI,OAAO,cAAc,CAAC,GAAG,GAAG;QAC/D,OAAO;QACP,YAAY,CAAC;QACb,cAAc,CAAC;QACf,UAAU,CAAC;IACb,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG;AACjB;AACA,OAAO,OAAO,GAAG,iBAAiB,OAAO,OAAO,CAAC,UAAU,GAAG,MAAM,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 708, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/decimal.js/decimal.mjs"],"sourcesContent":["/*!\r\n *  decimal.js v10.6.0\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or Â±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  // See https://github.com/MikeMcl/decimal.js/pull/217\r\n  x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, -1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is Â±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is Â±Infinity.\r\n    // Return x if both are Â±Infinity with different signs.\r\n    // Return NaN if both are Â±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is Â±Infinity or NaN, or y is NaN or Â±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is Â±Infinity or x is Â±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is Â±Infinity.\r\n    // Return x if both are Â±Infinity with the same sign.\r\n    // Return NaN if both are Â±Infinity with different signs.\r\n    // Return y if x is finite and y is Â±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, Â±Infinity or Â±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is Â±0 and y is Â±Infinity, or y is Â±0 and x is Â±Infinity.\r\n      ? NaN\r\n\r\n      // Return Â±Infinity if either is Â±Infinity.\r\n      // Return Â±0 if either is Â±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, Â±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, Â±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either Â±Infinity, NaN or Â±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return Â±0 if x is 0 or y is Â±Infinity, or return Â±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n */\r\nfunction maxOrMin(Ctor, args, n) {\r\n  var k, y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n\r\n    // NaN?\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    }\r\n\r\n    k = x.cmp(y);\r\n\r\n    if (k === n || k === 0 && x.s === n) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(Â±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// Â±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|bigint|Decimal} The y-coordinate.\r\n * x {number|string|bigint|Decimal} The x-coordinate.\r\n *\r\n * atan2(Â±0, -0)               = Â±pi\r\n * atan2(Â±0, +0)               = Â±0\r\n * atan2(Â±0, -x)               = Â±pi for x > 0\r\n * atan2(Â±0, x)                = Â±0 for x > 0\r\n * atan2(-y, Â±0)               = -pi/2 for y > 0\r\n * atan2(y, Â±0)                = pi/2 for y > 0\r\n * atan2(Â±y, -Infinity)        = Â±pi for finite y > 0\r\n * atan2(Â±y, +Infinity)        = Â±0 for finite y > 0\r\n * atan2(Â±Infinity, x)         = Â±pi/2 for finite x\r\n * atan2(Â±Infinity, -Infinity) = Â±3*pi/4\r\n * atan2(Â±Infinity, +Infinity) = Â±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both Â±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is Â±Infinity or y is Â±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is Â±Infinity or x is Â±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|bigint|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Infinity or NaN?\r\n      if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    if (t === 'string') {\r\n      if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        if (i === 43) v = v.slice(1);  // plus sign\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    if (t === 'bigint') {\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    throw Error(invalidArgument + v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n * y {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, -1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The base.\r\n * y {number|string|bigint|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4449, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/complex.js/dist/complex.mjs"],"sourcesContent":["'use strict';\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * const c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n\nconst cosh = Math.cosh || function (x) {\n  return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;\n};\n\nconst sinh = Math.sinh || function (x) {\n  return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;\n};\n\n/**\n * Calculates cos(x) - 1 using Taylor series if x is small (-Â¼Ï â¤ x â¤ Â¼Ï).\n *\n * @param {number} x\n * @returns {number} cos(x) - 1\n */\nconst cosm1 = function (x) {\n\n  const b = Math.PI / 4;\n  if (-b > x || x > b) {\n    return Math.cos(x) - 1.0;\n  }\n\n  /* Calculate horner form of polynomial of taylor series in Q\n  let fac = 1, alt = 1, pol = {};\n  for (let i = 0; i <= 16; i++) {\n    fac*= i || 1;\n    if (i % 2 == 0) {\n      pol[i] = new Fraction(1, alt * fac);\n      alt = -alt;\n    }\n  }\n  console.log(new Polynomial(pol).toHorner()); // (((((((1/20922789888000x^2-1/87178291200)x^2+1/479001600)x^2-1/3628800)x^2+1/40320)x^2-1/720)x^2+1/24)x^2-1/2)x^2+1\n  */\n\n  const xx = x * x;\n  return xx * (\n    xx * (\n      xx * (\n        xx * (\n          xx * (\n            xx * (\n              xx * (\n                xx / 20922789888000\n                - 1 / 87178291200)\n              + 1 / 479001600)\n            - 1 / 3628800)\n          + 1 / 40320)\n        - 1 / 720)\n      + 1 / 24)\n    - 1 / 2);\n};\n\nconst hypot = function (x, y) {\n\n  x = Math.abs(x);\n  y = Math.abs(y);\n\n  // Ensure `x` is the larger value\n  if (x < y) [x, y] = [y, x];\n\n  // If both are below the threshold, use straightforward Pythagoras\n  if (x < 1e8) return Math.sqrt(x * x + y * y);\n\n  // For larger values, scale to avoid overflow\n  y /= x;\n  return x * Math.sqrt(1 + y * y);\n};\n\nconst parser_exit = function () {\n  throw SyntaxError('Invalid Param');\n};\n\n/**\n * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n *\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction logHypot(a, b) {\n\n  const _a = Math.abs(a);\n  const _b = Math.abs(b);\n\n  if (a === 0) {\n    return Math.log(_b);\n  }\n\n  if (b === 0) {\n    return Math.log(_a);\n  }\n\n  if (_a < 3000 && _b < 3000) {\n    return Math.log(a * a + b * b) * 0.5;\n  }\n\n  /* I got 4 ideas to compute this property without overflow:\n   *\n   * Testing 1000000 times with random samples for a,b â [1, 1000000000] against a big decimal library to get an error estimate\n   *\n   * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n   Math.log(a * a + b * b) / 2\n\n   *\n   *\n   * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n   const fn = function(a, b) {\n   a = Math.abs(a);\n   b = Math.abs(b);\n   let t = Math.min(a, b);\n   a = Math.max(a, b);\n   t = t / a;\n\n   return Math.log(a) + Math.log(1 + t * t) / 2;\n   };\n\n   * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n   Math.log(a / Math.cos(Math.atan2(b, a)))\n\n   * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n   Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n   */\n\n  a = a * 0.5;\n  b = b * 0.5;\n\n  return 0.5 * Math.log(a * a + b * b) + Math.LN2;\n}\n\nconst P = { 're': 0, 'im': 0 };\nconst parse = function (a, b) {\n\n  const z = P;\n\n  if (a === undefined || a === null) {\n    z['re'] =\n      z['im'] = 0;\n  } else if (b !== undefined) {\n    z['re'] = a;\n    z['im'] = b;\n  } else\n    switch (typeof a) {\n\n      case 'object':\n\n        if ('im' in a && 're' in a) {\n          z['re'] = a['re'];\n          z['im'] = a['im'];\n        } else if ('abs' in a && 'arg' in a) {\n          if (!isFinite(a['abs']) && isFinite(a['arg'])) {\n            return Complex['INFINITY'];\n          }\n          z['re'] = a['abs'] * Math.cos(a['arg']);\n          z['im'] = a['abs'] * Math.sin(a['arg']);\n        } else if ('r' in a && 'phi' in a) {\n          if (!isFinite(a['r']) && isFinite(a['phi'])) {\n            return Complex['INFINITY'];\n          }\n          z['re'] = a['r'] * Math.cos(a['phi']);\n          z['im'] = a['r'] * Math.sin(a['phi']);\n        } else if (a.length === 2) { // Quick array check\n          z['re'] = a[0];\n          z['im'] = a[1];\n        } else {\n          parser_exit();\n        }\n        break;\n\n      case 'string':\n\n        z['im'] = /* void */\n        z['re'] = 0;\n\n        const tokens = a.replace(/_/g, '')\n          .match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n        let plus = 1;\n        let minus = 0;\n\n        if (tokens === null) {\n          parser_exit();\n        }\n\n        for (let i = 0; i < tokens.length; i++) {\n\n          const c = tokens[i];\n\n          if (c === ' ' || c === '\\t' || c === '\\n') {\n            /* void */\n          } else if (c === '+') {\n            plus++;\n          } else if (c === '-') {\n            minus++;\n          } else if (c === 'i' || c === 'I') {\n\n            if (plus + minus === 0) {\n              parser_exit();\n            }\n\n            if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n              i++;\n            } else {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n            }\n            plus = minus = 0;\n\n          } else {\n\n            if (plus + minus === 0 || isNaN(c)) {\n              parser_exit();\n            }\n\n            if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n              i++;\n            } else {\n              z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n            }\n            plus = minus = 0;\n          }\n        }\n\n        // Still something on the stack\n        if (plus + minus > 0) {\n          parser_exit();\n        }\n        break;\n\n      case 'number':\n        z['im'] = 0;\n        z['re'] = a;\n        break;\n\n      default:\n        parser_exit();\n    }\n\n  if (isNaN(z['re']) || isNaN(z['im'])) {\n    // If a calculation is NaN, we treat it as NaN and don't throw\n    //parser_exit();\n  }\n\n  return z;\n};\n\n/**\n * @constructor\n * @returns {Complex}\n */\nfunction Complex(a, b) {\n\n  if (!(this instanceof Complex)) {\n    return new Complex(a, b);\n  }\n\n  const z = parse(a, b);\n\n  this['re'] = z['re'];\n  this['im'] = z['im'];\n}\n\nComplex.prototype = {\n\n  're': 0,\n  'im': 0,\n\n  /**\n   * Calculates the sign of a complex number, which is a normalized complex\n   *\n   * @returns {Complex}\n   */\n  'sign': function () {\n\n    const abs = hypot(this['re'], this['im']);\n\n    return new Complex(\n      this['re'] / abs,\n      this['im'] / abs);\n  },\n\n  /**\n   * Adds two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'add': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n\n    if (tInfin || zInfin) {\n\n      if (tInfin && zInfin) {\n        // Infinity + Infinity = NaN\n        return Complex['NAN'];\n      }\n      // Infinity + z = Infinity { where z != Infinity }\n      return Complex['INFINITY'];\n    }\n\n    return new Complex(\n      this['re'] + z['re'],\n      this['im'] + z['im']);\n  },\n\n  /**\n   * Subtracts two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'sub': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n\n    if (tInfin || zInfin) {\n\n      if (tInfin && zInfin) {\n        // Infinity - Infinity = NaN\n        return Complex['NAN'];\n      }\n      // Infinity - z = Infinity { where z != Infinity }\n      return Complex['INFINITY'];\n    }\n\n    return new Complex(\n      this['re'] - z['re'],\n      this['im'] - z['im']);\n  },\n\n  /**\n   * Multiplies two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'mul': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n    const tIsZero = this['re'] === 0 && this['im'] === 0;\n    const zIsZero = z['re'] === 0 && z['im'] === 0;\n\n    // Infinity * 0 = NaN\n    if (tInfin && zIsZero || zInfin && tIsZero) {\n      return Complex['NAN'];\n    }\n\n    // Infinity * z = Infinity { where z != 0 }\n    if (tInfin || zInfin) {\n      return Complex['INFINITY'];\n    }\n\n    // Shortcut for real values\n    if (z['im'] === 0 && this['im'] === 0) {\n      return new Complex(this['re'] * z['re'], 0);\n    }\n\n    return new Complex(\n      this['re'] * z['re'] - this['im'] * z['im'],\n      this['re'] * z['im'] + this['im'] * z['re']);\n  },\n\n  /**\n   * Divides two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'div': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n    const tIsZero = this['re'] === 0 && this['im'] === 0;\n    const zIsZero = z['re'] === 0 && z['im'] === 0;\n\n    // 0 / 0 = NaN and Infinity / Infinity = NaN\n    if (tIsZero && zIsZero || tInfin && zInfin) {\n      return Complex['NAN'];\n    }\n\n    // Infinity / 0 = Infinity\n    if (zIsZero || tInfin) {\n      return Complex['INFINITY'];\n    }\n\n    // 0 / Infinity = 0\n    if (tIsZero || zInfin) {\n      return Complex['ZERO'];\n    }\n\n    if (0 === z['im']) {\n      // Divisor is real\n      return new Complex(this['re'] / z['re'], this['im'] / z['re']);\n    }\n\n    if (Math.abs(z['re']) < Math.abs(z['im'])) {\n\n      const x = z['re'] / z['im'];\n      const t = z['re'] * x + z['im'];\n\n      return new Complex(\n        (this['re'] * x + this['im']) / t,\n        (this['im'] * x - this['re']) / t);\n\n    } else {\n\n      const x = z['im'] / z['re'];\n      const t = z['im'] * x + z['re'];\n\n      return new Complex(\n        (this['re'] + this['im'] * x) / t,\n        (this['im'] - this['re'] * x) / t);\n    }\n  },\n\n  /**\n   * Calculate the power of two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'pow': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tIsZero = this['re'] === 0 && this['im'] === 0;\n    const zIsZero = z['re'] === 0 && z['im'] === 0;\n\n    if (zIsZero) {\n      return Complex['ONE'];\n    }\n\n    // If the exponent is real\n    if (z['im'] === 0) {\n\n      if (this['im'] === 0 && this['re'] > 0) {\n\n        return new Complex(Math.pow(this['re'], z['re']), 0);\n\n      } else if (this['re'] === 0) { // If base is fully imaginary\n\n        switch ((z['re'] % 4 + 4) % 4) {\n          case 0:\n            return new Complex(Math.pow(this['im'], z['re']), 0);\n          case 1:\n            return new Complex(0, Math.pow(this['im'], z['re']));\n          case 2:\n            return new Complex(-Math.pow(this['im'], z['re']), 0);\n          case 3:\n            return new Complex(0, -Math.pow(this['im'], z['re']));\n        }\n      }\n    }\n\n    /* I couldn't find a good formula, so here is a derivation and optimization\n     *\n     * z_1^z_2 = (a + bi)^(c + di)\n     *         = exp((c + di) * log(a + bi)\n     *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n     * =>...\n     * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n     * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n     *\n     * =>...\n     * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n     * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n     *\n     * =>\n     * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n     * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n     *\n     */\n\n    if (tIsZero && z['re'] > 0) { // Same behavior as Wolframalpha, Zero if real part is zero\n      return Complex['ZERO'];\n    }\n\n    const arg = Math.atan2(this['im'], this['re']);\n    const loh = logHypot(this['re'], this['im']);\n\n    let re = Math.exp(z['re'] * loh - z['im'] * arg);\n    let im = z['im'] * loh + z['re'] * arg;\n    return new Complex(\n      re * Math.cos(im),\n      re * Math.sin(im));\n  },\n\n  /**\n   * Calculate the complex square root\n   *\n   * @returns {Complex}\n   */\n  'sqrt': function () {\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0) {\n      // Real number case\n      if (a >= 0) {\n        return new Complex(Math.sqrt(a), 0);\n      } else {\n        return new Complex(0, Math.sqrt(-a));\n      }\n    }\n\n    const r = hypot(a, b);\n\n    let re = Math.sqrt(0.5 * (r + Math.abs(a))); // sqrt(2x) / 2 = sqrt(x / 2)\n    let im = Math.abs(b) / (2 * re);\n\n    if (a >= 0) {\n      return new Complex(re, b < 0 ? -im : im);\n    } else {\n      return new Complex(im, b < 0 ? -re : re);\n    }\n  },\n\n  /**\n   * Calculate the complex exponent\n   *\n   * @returns {Complex}\n   */\n  'exp': function () {\n\n    const er = Math.exp(this['re']);\n\n    if (this['im'] === 0) {\n      return new Complex(er, 0);\n    }\n    return new Complex(\n      er * Math.cos(this['im']),\n      er * Math.sin(this['im']));\n  },\n\n  /**\n   * Calculate the complex exponent and subtracts one.\n   *\n   * This may be more accurate than `Complex(x).exp().sub(1)` if\n   * `x` is small.\n   *\n   * @returns {Complex}\n   */\n  'expm1': function () {\n\n    /**\n     * exp(a + i*b) - 1\n     = exp(a) * (cos(b) + j*sin(b)) - 1\n     = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n     */\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      Math.expm1(a) * Math.cos(b) + cosm1(b),\n      Math.exp(a) * Math.sin(b));\n  },\n\n  /**\n   * Calculate the natural log\n   *\n   * @returns {Complex}\n   */\n  'log': function () {\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0 && a > 0) {\n      return new Complex(Math.log(a), 0);\n    }\n\n    return new Complex(\n      logHypot(a, b),\n      Math.atan2(b, a));\n  },\n\n  /**\n   * Calculate the magnitude of the complex number\n   *\n   * @returns {number}\n   */\n  'abs': function () {\n\n    return hypot(this['re'], this['im']);\n  },\n\n  /**\n   * Calculate the angle of the complex number\n   *\n   * @returns {number}\n   */\n  'arg': function () {\n\n    return Math.atan2(this['im'], this['re']);\n  },\n\n  /**\n   * Calculate the sine of the complex number\n   *\n   * @returns {Complex}\n   */\n  'sin': function () {\n\n    // sin(z) = ( e^iz - e^-iz ) / 2i \n    //        = sin(a)cosh(b) + i cos(a)sinh(b)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      Math.sin(a) * cosh(b),\n      Math.cos(a) * sinh(b));\n  },\n\n  /**\n   * Calculate the cosine\n   *\n   * @returns {Complex}\n   */\n  'cos': function () {\n\n    // cos(z) = ( e^iz + e^-iz ) / 2 \n    //        = cos(a)cosh(b) - i sin(a)sinh(b)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      Math.cos(a) * cosh(b),\n      -Math.sin(a) * sinh(b));\n  },\n\n  /**\n   * Calculate the tangent\n   *\n   * @returns {Complex}\n   */\n  'tan': function () {\n\n    // tan(z) = sin(z) / cos(z) \n    //        = ( e^iz - e^-iz ) / ( i( e^iz + e^-iz ) )\n    //        = ( e^2iz - 1 ) / i( e^2iz + 1 )\n    //        = ( sin(2a) + i sinh(2b) ) / ( cos(2a) + cosh(2b) )\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = Math.cos(a) + cosh(b);\n\n    return new Complex(\n      Math.sin(a) / d,\n      sinh(b) / d);\n  },\n\n  /**\n   * Calculate the cotangent\n   *\n   * @returns {Complex}\n   */\n  'cot': function () {\n\n    // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = Math.cos(a) - cosh(b);\n\n    return new Complex(\n      -Math.sin(a) / d,\n      sinh(b) / d);\n  },\n\n  /**\n   * Calculate the secant\n   *\n   * @returns {Complex}\n   */\n  'sec': function () {\n\n    // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n    return new Complex(\n      Math.cos(a) * cosh(b) / d,\n      Math.sin(a) * sinh(b) / d);\n  },\n\n  /**\n   * Calculate the cosecans\n   *\n   * @returns {Complex}\n   */\n  'csc': function () {\n\n    // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n    return new Complex(\n      Math.sin(a) * cosh(b) / d,\n      -Math.cos(a) * sinh(b) / d);\n  },\n\n  /**\n   * Calculate the complex arcus sinus\n   *\n   * @returns {Complex}\n   */\n  'asin': function () {\n\n    // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const t1 = new Complex(\n      b * b - a * a + 1,\n      -2 * a * b)['sqrt']();\n\n    const t2 = new Complex(\n      t1['re'] - b,\n      t1['im'] + a)['log']();\n\n    return new Complex(t2['im'], -t2['re']);\n  },\n\n  /**\n   * Calculate the complex arcus cosinus\n   *\n   * @returns {Complex}\n   */\n  'acos': function () {\n\n    // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const t1 = new Complex(\n      b * b - a * a + 1,\n      -2 * a * b)['sqrt']();\n\n    const t2 = new Complex(\n      t1['re'] - b,\n      t1['im'] + a)['log']();\n\n    return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n  },\n\n  /**\n   * Calculate the complex arcus tangent\n   *\n   * @returns {Complex}\n   */\n  'atan': function () {\n\n    // atan(c) = i / 2 log((i + x) / (i - x))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0) {\n\n      if (b === 1) {\n        return new Complex(0, Infinity);\n      }\n\n      if (b === -1) {\n        return new Complex(0, -Infinity);\n      }\n    }\n\n    const d = a * a + (1.0 - b) * (1.0 - b);\n\n    const t1 = new Complex(\n      (1 - b * b - a * a) / d,\n      -2 * a / d).log();\n\n    return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n  },\n\n  /**\n   * Calculate the complex arcus cotangent\n   *\n   * @returns {Complex}\n   */\n  'acot': function () {\n\n    // acot(c) = i / 2 log((c - i) / (c + i))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0) {\n      return new Complex(Math.atan2(1, a), 0);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).atan()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).atan();\n  },\n\n  /**\n   * Calculate the complex arcus secant\n   *\n   * @returns {Complex}\n   */\n  'asec': function () {\n\n    // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0 && b === 0) {\n      return new Complex(0, Infinity);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).acos()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).acos();\n  },\n\n  /**\n   * Calculate the complex arcus cosecans\n   *\n   * @returns {Complex}\n   */\n  'acsc': function () {\n\n    // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0 && b === 0) {\n      return new Complex(Math.PI / 2, Infinity);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).asin()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).asin();\n  },\n\n  /**\n   * Calculate the complex sinh\n   *\n   * @returns {Complex}\n   */\n  'sinh': function () {\n\n    // sinh(c) = (e^c - e^-c) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      sinh(a) * Math.cos(b),\n      cosh(a) * Math.sin(b));\n  },\n\n  /**\n   * Calculate the complex cosh\n   *\n   * @returns {Complex}\n   */\n  'cosh': function () {\n\n    // cosh(c) = (e^c + e^-c) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      cosh(a) * Math.cos(b),\n      sinh(a) * Math.sin(b));\n  },\n\n  /**\n   * Calculate the complex tanh\n   *\n   * @returns {Complex}\n   */\n  'tanh': function () {\n\n    // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = cosh(a) + Math.cos(b);\n\n    return new Complex(\n      sinh(a) / d,\n      Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex coth\n   *\n   * @returns {Complex}\n   */\n  'coth': function () {\n\n    // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = cosh(a) - Math.cos(b);\n\n    return new Complex(\n      sinh(a) / d,\n      -Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex coth\n   *\n   * @returns {Complex}\n   */\n  'csch': function () {\n\n    // csch(c) = 2 / (e^c - e^-c)\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = Math.cos(2 * b) - cosh(2 * a);\n\n    return new Complex(\n      -2 * sinh(a) * Math.cos(b) / d,\n      2 * cosh(a) * Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex sech\n   *\n   * @returns {Complex}\n   */\n  'sech': function () {\n\n    // sech(c) = 2 / (e^c + e^-c)\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = Math.cos(2 * b) + cosh(2 * a);\n\n    return new Complex(\n      2 * cosh(a) * Math.cos(b) / d,\n      -2 * sinh(a) * Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex asinh\n   *\n   * @returns {Complex}\n   */\n  'asinh': function () {\n\n    // asinh(c) = log(c + sqrt(c^2 + 1))\n\n    let tmp = this['im'];\n    this['im'] = -this['re'];\n    this['re'] = tmp;\n    const res = this['asin']();\n\n    this['re'] = -this['im'];\n    this['im'] = tmp;\n    tmp = res['re'];\n\n    res['re'] = -res['im'];\n    res['im'] = tmp;\n    return res;\n  },\n\n  /**\n   * Calculate the complex acosh\n   *\n   * @returns {Complex}\n   */\n  'acosh': function () {\n\n    // acosh(c) = log(c + sqrt(c^2 - 1))\n\n    const res = this['acos']();\n    if (res['im'] <= 0) {\n      const tmp = res['re'];\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n    } else {\n      const tmp = res['im'];\n      res['im'] = -res['re'];\n      res['re'] = tmp;\n    }\n    return res;\n  },\n\n  /**\n   * Calculate the complex atanh\n   *\n   * @returns {Complex}\n   */\n  'atanh': function () {\n\n    // atanh(c) = log((1+c) / (1-c)) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const noIM = a > 1 && b === 0;\n    const oneMinus = 1 - a;\n    const onePlus = 1 + a;\n    const d = oneMinus * oneMinus + b * b;\n\n    const x = (d !== 0)\n      ? new Complex(\n        (onePlus * oneMinus - b * b) / d,\n        (b * oneMinus + onePlus * b) / d)\n      : new Complex(\n        (a !== -1) ? (a / 0) : 0,\n        (b !== 0) ? (b / 0) : 0);\n\n    const temp = x['re'];\n    x['re'] = logHypot(x['re'], x['im']) / 2;\n    x['im'] = Math.atan2(x['im'], temp) / 2;\n    if (noIM) {\n      x['im'] = -x['im'];\n    }\n    return x;\n  },\n\n  /**\n   * Calculate the complex acoth\n   *\n   * @returns {Complex}\n   */\n  'acoth': function () {\n\n    // acoth(c) = log((c+1) / (c-1)) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0 && b === 0) {\n      return new Complex(0, Math.PI / 2);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).atanh()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).atanh();\n  },\n\n  /**\n   * Calculate the complex acsch\n   *\n   * @returns {Complex}\n   */\n  'acsch': function () {\n\n    // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0) {\n\n      return new Complex(\n        (a !== 0)\n          ? Math.log(a + Math.sqrt(a * a + 1))\n          : Infinity, 0);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).asinh()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).asinh();\n  },\n\n  /**\n   * Calculate the complex asech\n   *\n   * @returns {Complex}\n   */\n  'asech': function () {\n\n    // asech(c) = log((1+sqrt(1-c^2))/c)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (this['isZero']()) {\n      return Complex['INFINITY'];\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).acosh()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).acosh();\n  },\n\n  /**\n   * Calculate the complex inverse 1/z\n   *\n   * @returns {Complex}\n   */\n  'inverse': function () {\n\n    // 1 / 0 = Infinity and 1 / Infinity = 0\n    if (this['isZero']()) {\n      return Complex['INFINITY'];\n    }\n\n    if (this['isInfinite']()) {\n      return Complex['ZERO'];\n    }\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const d = a * a + b * b;\n\n    return new Complex(a / d, -b / d);\n  },\n\n  /**\n   * Returns the complex conjugate\n   *\n   * @returns {Complex}\n   */\n  'conjugate': function () {\n\n    return new Complex(this['re'], -this['im']);\n  },\n\n  /**\n   * Gets the negated complex number\n   *\n   * @returns {Complex}\n   */\n  'neg': function () {\n\n    return new Complex(-this['re'], -this['im']);\n  },\n\n  /**\n   * Ceils the actual complex number\n   *\n   * @returns {Complex}\n   */\n  'ceil': function (places) {\n\n    places = Math.pow(10, places || 0);\n\n    return new Complex(\n      Math.ceil(this['re'] * places) / places,\n      Math.ceil(this['im'] * places) / places);\n  },\n\n  /**\n   * Floors the actual complex number\n   *\n   * @returns {Complex}\n   */\n  'floor': function (places) {\n\n    places = Math.pow(10, places || 0);\n\n    return new Complex(\n      Math.floor(this['re'] * places) / places,\n      Math.floor(this['im'] * places) / places);\n  },\n\n  /**\n   * Ceils the actual complex number\n   *\n   * @returns {Complex}\n   */\n  'round': function (places) {\n\n    places = Math.pow(10, places || 0);\n\n    return new Complex(\n      Math.round(this['re'] * places) / places,\n      Math.round(this['im'] * places) / places);\n  },\n\n  /**\n   * Compares two complex numbers\n   *\n   * **Note:** new Complex(Infinity).equals(Infinity) === false\n   *\n   * @returns {boolean}\n   */\n  'equals': function (a, b) {\n\n    const z = parse(a, b);\n\n    return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n      Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n  },\n\n  /**\n   * Clones the actual object\n   *\n   * @returns {Complex}\n   */\n  'clone': function () {\n\n    return new Complex(this['re'], this['im']);\n  },\n\n  /**\n   * Gets a string of the actual complex number\n   *\n   * @returns {string}\n   */\n  'toString': function () {\n\n    let a = this['re'];\n    let b = this['im'];\n    let ret = \"\";\n\n    if (this['isNaN']()) {\n      return 'NaN';\n    }\n\n    if (this['isInfinite']()) {\n      return 'Infinity';\n    }\n\n    if (Math.abs(a) < Complex['EPSILON']) {\n      a = 0;\n    }\n\n    if (Math.abs(b) < Complex['EPSILON']) {\n      b = 0;\n    }\n\n    // If is real number\n    if (b === 0) {\n      return ret + a;\n    }\n\n    if (a !== 0) {\n      ret += a;\n      ret += \" \";\n      if (b < 0) {\n        b = -b;\n        ret += \"-\";\n      } else {\n        ret += \"+\";\n      }\n      ret += \" \";\n    } else if (b < 0) {\n      b = -b;\n      ret += \"-\";\n    }\n\n    if (1 !== b) { // b is the absolute imaginary part\n      ret += b;\n    }\n    return ret + \"i\";\n  },\n\n  /**\n   * Returns the actual number as a vector\n   *\n   * @returns {Array}\n   */\n  'toVector': function () {\n\n    return [this['re'], this['im']];\n  },\n\n  /**\n   * Returns the actual real value of the current object\n   *\n   * @returns {number|null}\n   */\n  'valueOf': function () {\n\n    if (this['im'] === 0) {\n      return this['re'];\n    }\n    return null;\n  },\n\n  /**\n   * Determines whether a complex number is not on the Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isNaN': function () {\n    return isNaN(this['re']) || isNaN(this['im']);\n  },\n\n  /**\n   * Determines whether or not a complex number is at the zero pole of the\n   * Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isZero': function () {\n    return this['im'] === 0 && this['re'] === 0;\n  },\n\n  /**\n   * Determines whether a complex number is not at the infinity pole of the\n   * Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isFinite': function () {\n    return isFinite(this['re']) && isFinite(this['im']);\n  },\n\n  /**\n   * Determines whether or not a complex number is at the infinity pole of the\n   * Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isInfinite': function () {\n    return !this['isFinite']();\n  }\n};\n\nComplex['ZERO'] = new Complex(0, 0);\nComplex['ONE'] = new Complex(1, 0);\nComplex['I'] = new Complex(0, 1);\nComplex['PI'] = new Complex(Math.PI, 0);\nComplex['E'] = new Complex(Math.E, 0);\nComplex['INFINITY'] = new Complex(Infinity, Infinity);\nComplex['NAN'] = new Complex(NaN, NaN);\nComplex['EPSILON'] = 1e-15;\nexport {\n  Complex as default, Complex\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5418, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/fraction.js/dist/fraction.mjs"],"sourcesContent":["'use strict';\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <numerator>, 1 => <denominator> ]\n * { n => <numerator>, d => <denominator> }\n *\n * Integer form\n * - Single integer value as BigInt or Number\n *\n * Double form\n * - Single double value as Number\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n * let f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n// Set Identity function to downgrade BigInt to Number if needed\nif (typeof BigInt === 'undefined') BigInt = function (n) { if (isNaN(n)) throw new Error(\"\"); return n; };\n\nconst C_ZERO = BigInt(0);\nconst C_ONE = BigInt(1);\nconst C_TWO = BigInt(2);\nconst C_THREE = BigInt(3);\nconst C_FIVE = BigInt(5);\nconst C_TEN = BigInt(10);\nconst MAX_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\n\n// Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n// Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n// If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\nconst MAX_CYCLE_LEN = 2000;\n\n// Parsed data to avoid calling \"new\" all the time\nconst P = {\n  \"s\": C_ONE,\n  \"n\": C_ZERO,\n  \"d\": C_ONE\n};\n\nfunction assign(n, s) {\n\n  try {\n    n = BigInt(n);\n  } catch (e) {\n    throw InvalidParameter();\n  }\n  return n * s;\n}\n\nfunction ifloor(x) {\n  return typeof x === 'bigint' ? x : Math.floor(x);\n}\n\n// Creates a new Fraction internally without the need of the bulky constructor\nfunction newFraction(n, d) {\n\n  if (d === C_ZERO) {\n    throw DivisionByZero();\n  }\n\n  const f = Object.create(Fraction.prototype);\n  f[\"s\"] = n < C_ZERO ? -C_ONE : C_ONE;\n\n  n = n < C_ZERO ? -n : n;\n\n  const a = gcd(n, d);\n\n  f[\"n\"] = n / a;\n  f[\"d\"] = d / a;\n  return f;\n}\n\nconst FACTORSTEPS = [C_TWO * C_TWO, C_TWO, C_TWO * C_TWO, C_TWO, C_TWO * C_TWO, C_TWO * C_THREE, C_TWO, C_TWO * C_THREE]; // repeats\nfunction factorize(n) {\n\n  const factors = Object.create(null);\n  if (n <= C_ONE) {\n    factors[n] = C_ONE;\n    return factors;\n  }\n\n  const add = (p) => { factors[p] = (factors[p] || C_ZERO) + C_ONE; };\n\n  while (n % C_TWO === C_ZERO) { add(C_TWO); n /= C_TWO; }\n  while (n % C_THREE === C_ZERO) { add(C_THREE); n /= C_THREE; }\n  while (n % C_FIVE === C_ZERO) { add(C_FIVE); n /= C_FIVE; }\n\n  // 30-wheel trial division: test only residues coprime to 2*3*5\n  // Residue step pattern after 5: 7,11,13,17,19,23,29,31, ...\n  for (let si = 0, p = C_TWO + C_FIVE; p * p <= n;) {\n    while (n % p === C_ZERO) { add(p); n /= p; }\n    p += FACTORSTEPS[si];\n    si = (si + 1) & 7; // fast modulo 8\n  }\n  if (n > C_ONE) add(n);\n  return factors;\n}\n\nconst parse = function (p1, p2) {\n\n  let n = C_ZERO, d = C_ONE, s = C_ONE;\n\n  if (p1 === undefined || p1 === null) { // No argument\n    /* void */\n  } else if (p2 !== undefined) { // Two arguments\n\n    if (typeof p1 === \"bigint\") {\n      n = p1;\n    } else if (isNaN(p1)) {\n      throw InvalidParameter();\n    } else if (p1 % 1 !== 0) {\n      throw NonIntegerParameter();\n    } else {\n      n = BigInt(p1);\n    }\n\n    if (typeof p2 === \"bigint\") {\n      d = p2;\n    } else if (isNaN(p2)) {\n      throw InvalidParameter();\n    } else if (p2 % 1 !== 0) {\n      throw NonIntegerParameter();\n    } else {\n      d = BigInt(p2);\n    }\n\n    s = n * d;\n\n  } else if (typeof p1 === \"object\") {\n    if (\"d\" in p1 && \"n\" in p1) {\n      n = BigInt(p1[\"n\"]);\n      d = BigInt(p1[\"d\"]);\n      if (\"s\" in p1)\n        n *= BigInt(p1[\"s\"]);\n    } else if (0 in p1) {\n      n = BigInt(p1[0]);\n      if (1 in p1)\n        d = BigInt(p1[1]);\n    } else if (typeof p1 === \"bigint\") {\n      n = p1;\n    } else {\n      throw InvalidParameter();\n    }\n    s = n * d;\n  } else if (typeof p1 === \"number\") {\n\n    if (isNaN(p1)) {\n      throw InvalidParameter();\n    }\n\n    if (p1 < 0) {\n      s = -C_ONE;\n      p1 = -p1;\n    }\n\n    if (p1 % 1 === 0) {\n      n = BigInt(p1);\n    } else {\n\n      let z = 1;\n\n      let A = 0, B = 1;\n      let C = 1, D = 1;\n\n      let N = 10000000;\n\n      if (p1 >= 1) {\n        z = 10 ** Math.floor(1 + Math.log10(p1));\n        p1 /= z;\n      }\n\n      // Using Farey Sequences\n\n      while (B <= N && D <= N) {\n        let M = (A + C) / (B + D);\n\n        if (p1 === M) {\n          if (B + D <= N) {\n            n = A + C;\n            d = B + D;\n          } else if (D > B) {\n            n = C;\n            d = D;\n          } else {\n            n = A;\n            d = B;\n          }\n          break;\n\n        } else {\n\n          if (p1 > M) {\n            A += C;\n            B += D;\n          } else {\n            C += A;\n            D += B;\n          }\n\n          if (B > N) {\n            n = C;\n            d = D;\n          } else {\n            n = A;\n            d = B;\n          }\n        }\n      }\n      n = BigInt(n) * BigInt(z);\n      d = BigInt(d);\n    }\n\n  } else if (typeof p1 === \"string\") {\n\n    let ndx = 0;\n\n    let v = C_ZERO, w = C_ZERO, x = C_ZERO, y = C_ONE, z = C_ONE;\n\n    let match = p1.replace(/_/g, '').match(/\\d+|./g);\n\n    if (match === null)\n      throw InvalidParameter();\n\n    if (match[ndx] === '-') {// Check for minus sign at the beginning\n      s = -C_ONE;\n      ndx++;\n    } else if (match[ndx] === '+') {// Check for plus sign at the beginning\n      ndx++;\n    }\n\n    if (match.length === ndx + 1) { // Check if it's just a simple number \"1234\"\n      w = assign(match[ndx++], s);\n    } else if (match[ndx + 1] === '.' || match[ndx] === '.') { // Check if it's a decimal number\n\n      if (match[ndx] !== '.') { // Handle 0.5 and .5\n        v = assign(match[ndx++], s);\n      }\n      ndx++;\n\n      // Check for decimal places\n      if (ndx + 1 === match.length || match[ndx + 1] === '(' && match[ndx + 3] === ')' || match[ndx + 1] === \"'\" && match[ndx + 3] === \"'\") {\n        w = assign(match[ndx], s);\n        y = C_TEN ** BigInt(match[ndx].length);\n        ndx++;\n      }\n\n      // Check for repeating places\n      if (match[ndx] === '(' && match[ndx + 2] === ')' || match[ndx] === \"'\" && match[ndx + 2] === \"'\") {\n        x = assign(match[ndx + 1], s);\n        z = C_TEN ** BigInt(match[ndx + 1].length) - C_ONE;\n        ndx += 3;\n      }\n\n    } else if (match[ndx + 1] === '/' || match[ndx + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n      w = assign(match[ndx], s);\n      y = assign(match[ndx + 2], C_ONE);\n      ndx += 3;\n    } else if (match[ndx + 3] === '/' && match[ndx + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n      v = assign(match[ndx], s);\n      w = assign(match[ndx + 2], s);\n      y = assign(match[ndx + 4], C_ONE);\n      ndx += 5;\n    }\n\n    if (match.length <= ndx) { // Check for more tokens on the stack\n      d = y * z;\n      s = /* void */\n        n = x + d * v + z * w;\n    } else {\n      throw InvalidParameter();\n    }\n\n  } else if (typeof p1 === \"bigint\") {\n    n = p1;\n    s = p1;\n    d = C_ONE;\n  } else {\n    throw InvalidParameter();\n  }\n\n  if (d === C_ZERO) {\n    throw DivisionByZero();\n  }\n\n  P[\"s\"] = s < C_ZERO ? -C_ONE : C_ONE;\n  P[\"n\"] = n < C_ZERO ? -n : n;\n  P[\"d\"] = d < C_ZERO ? -d : d;\n};\n\nfunction modpow(b, e, m) {\n\n  let r = C_ONE;\n  for (; e > C_ZERO; b = (b * b) % m, e >>= C_ONE) {\n\n    if (e & C_ONE) {\n      r = (r * b) % m;\n    }\n  }\n  return r;\n}\n\nfunction cycleLen(n, d) {\n\n  for (; d % C_TWO === C_ZERO;\n    d /= C_TWO) {\n  }\n\n  for (; d % C_FIVE === C_ZERO;\n    d /= C_FIVE) {\n  }\n\n  if (d === C_ONE) // Catch non-cyclic numbers\n    return C_ZERO;\n\n  // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n  // 10^(d-1) % d == 1\n  // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n  // as we want to translate the numbers to strings.\n\n  let rem = C_TEN % d;\n  let t = 1;\n\n  for (; rem !== C_ONE; t++) {\n    rem = rem * C_TEN % d;\n\n    if (t > MAX_CYCLE_LEN)\n      return C_ZERO; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n  }\n  return BigInt(t);\n}\n\nfunction cycleStart(n, d, len) {\n\n  let rem1 = C_ONE;\n  let rem2 = modpow(C_TEN, len, d);\n\n  for (let t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n    // Solve 10^s == 10^(s+t) (mod d)\n\n    if (rem1 === rem2)\n      return BigInt(t);\n\n    rem1 = rem1 * C_TEN % d;\n    rem2 = rem2 * C_TEN % d;\n  }\n  return 0;\n}\n\nfunction gcd(a, b) {\n\n  if (!a)\n    return b;\n  if (!b)\n    return a;\n\n  while (1) {\n    a %= b;\n    if (!a)\n      return b;\n    b %= a;\n    if (!b)\n      return a;\n  }\n}\n\n/**\n * Module constructor\n *\n * @constructor\n * @param {number|Fraction=} a\n * @param {number=} b\n */\nfunction Fraction(a, b) {\n\n  parse(a, b);\n\n  if (this instanceof Fraction) {\n    a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  } else {\n    return newFraction(P['s'] * P['n'], P['d']);\n  }\n}\n\nconst DivisionByZero = function () { return new Error(\"Division by Zero\"); };\nconst InvalidParameter = function () { return new Error(\"Invalid argument\"); };\nconst NonIntegerParameter = function () { return new Error(\"Parameters must be integer\"); };\n\nFraction.prototype = {\n\n  \"s\": C_ONE,\n  \"n\": C_ZERO,\n  \"d\": C_ONE,\n\n  /**\n   * Calculates the absolute value\n   *\n   * Ex: new Fraction(-4).abs() => 4\n   **/\n  \"abs\": function () {\n\n    return newFraction(this[\"n\"], this[\"d\"]);\n  },\n\n  /**\n   * Inverts the sign of the current fraction\n   *\n   * Ex: new Fraction(-4).neg() => 4\n   **/\n  \"neg\": function () {\n\n    return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n  },\n\n  /**\n   * Adds two rational numbers\n   *\n   * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n   **/\n  \"add\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n      this[\"d\"] * P[\"d\"]\n    );\n  },\n\n  /**\n   * Subtracts two rational numbers\n   *\n   * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n   **/\n  \"sub\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n      this[\"d\"] * P[\"d\"]\n    );\n  },\n\n  /**\n   * Multiplies two rational numbers\n   *\n   * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n   **/\n  \"mul\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n      this[\"d\"] * P[\"d\"]\n    );\n  },\n\n  /**\n   * Divides two rational numbers\n   *\n   * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n   **/\n  \"div\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n      this[\"d\"] * P[\"n\"]\n    );\n  },\n\n  /**\n   * Clones the actual object\n   *\n   * Ex: new Fraction(\"-17.(345)\").clone()\n   **/\n  \"clone\": function () {\n    return newFraction(this['s'] * this['n'], this['d']);\n  },\n\n  /**\n   * Calculates the modulo of two rational numbers - a more precise fmod\n   *\n   * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n   * Ex: new Fraction(20, 10).mod().equals(0) ? \"is Integer\"\n   **/\n  \"mod\": function (a, b) {\n\n    if (a === undefined) {\n      return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], C_ONE);\n    }\n\n    parse(a, b);\n    if (C_ZERO === P[\"n\"] * this[\"d\"]) {\n      throw DivisionByZero();\n    }\n\n    /**\n     * I derived the rational modulo similar to the modulo for integers\n     *\n     * https://raw.org/book/analysis/rational-numbers/\n     *\n     *    n1/d1 = (n2/d2) * q + r, where 0 â¤ r < n2/d2\n     * => d2 * n1 = n2 * d1 * q + d1 * d2 * r\n     * => r = (d2 * n1 - n2 * d1 * q) / (d1 * d2)\n     *      = (d2 * n1 - n2 * d1 * floor((d2 * n1) / (n2 * d1))) / (d1 * d2)\n     *      = ((d2 * n1) % (n2 * d1)) / (d1 * d2)\n     */\n    return newFraction(\n      this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n      P[\"d\"] * this[\"d\"]);\n  },\n\n  /**\n   * Calculates the fractional gcd of two rational numbers\n   *\n   * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n   */\n  \"gcd\": function (a, b) {\n\n    parse(a, b);\n\n    // https://raw.org/book/analysis/rational-numbers/\n    // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n    return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n  },\n\n  /**\n   * Calculates the fractional lcm of two rational numbers\n   *\n   * Ex: new Fraction(5,8).lcm(3,7) => 15\n   */\n  \"lcm\": function (a, b) {\n\n    parse(a, b);\n\n    // https://raw.org/book/analysis/rational-numbers/\n    // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n    if (P[\"n\"] === C_ZERO && this[\"n\"] === C_ZERO) {\n      return newFraction(C_ZERO, C_ONE);\n    }\n    return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n  },\n\n  /**\n   * Gets the inverse of the fraction, means numerator and denominator are exchanged\n   *\n   * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n   **/\n  \"inverse\": function () {\n    return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n  },\n\n  /**\n   * Calculates the fraction to some integer exponent\n   *\n   * Ex: new Fraction(-1,2).pow(-3) => -8\n   */\n  \"pow\": function (a, b) {\n\n    parse(a, b);\n\n    // Trivial case when exp is an integer\n\n    if (P['d'] === C_ONE) {\n\n      if (P['s'] < C_ZERO) {\n        return newFraction((this['s'] * this[\"d\"]) ** P['n'], this[\"n\"] ** P['n']);\n      } else {\n        return newFraction((this['s'] * this[\"n\"]) ** P['n'], this[\"d\"] ** P['n']);\n      }\n    }\n\n    // Negative roots become complex\n    //     (-a/b)^(c/d) = x\n    // â (-1)^(c/d) * (a/b)^(c/d) = x\n    // â (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x\n    // â (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula\n    // From which follows that only for c=0 the root is non-complex\n    if (this['s'] < C_ZERO) return null;\n\n    // Now prime factor n and d\n    let N = factorize(this['n']);\n    let D = factorize(this['d']);\n\n    // Exponentiate and take root for n and d individually\n    let n = C_ONE;\n    let d = C_ONE;\n    for (let k in N) {\n      if (k === '1') continue;\n      if (k === '0') {\n        n = C_ZERO;\n        break;\n      }\n      N[k] *= P['n'];\n\n      if (N[k] % P['d'] === C_ZERO) {\n        N[k] /= P['d'];\n      } else return null;\n      n *= BigInt(k) ** N[k];\n    }\n\n    for (let k in D) {\n      if (k === '1') continue;\n      D[k] *= P['n'];\n\n      if (D[k] % P['d'] === C_ZERO) {\n        D[k] /= P['d'];\n      } else return null;\n      d *= BigInt(k) ** D[k];\n    }\n\n    if (P['s'] < C_ZERO) {\n      return newFraction(d, n);\n    }\n    return newFraction(n, d);\n  },\n\n  /**\n   * Calculates the logarithm of a fraction to a given rational base\n   *\n   * Ex: new Fraction(27, 8).log(9, 4) => 3/2\n   */\n  \"log\": function (a, b) {\n\n    parse(a, b);\n\n    if (this['s'] <= C_ZERO || P['s'] <= C_ZERO) return null;\n\n    const allPrimes = Object.create(null);\n\n    const baseFactors = factorize(P['n']);\n    const T1 = factorize(P['d']);\n\n    const numberFactors = factorize(this['n']);\n    const T2 = factorize(this['d']);\n\n    for (const prime in T1) {\n      baseFactors[prime] = (baseFactors[prime] || C_ZERO) - T1[prime];\n    }\n    for (const prime in T2) {\n      numberFactors[prime] = (numberFactors[prime] || C_ZERO) - T2[prime];\n    }\n\n    for (const prime in baseFactors) {\n      if (prime === '1') continue;\n      allPrimes[prime] = true;\n    }\n    for (const prime in numberFactors) {\n      if (prime === '1') continue;\n      allPrimes[prime] = true;\n    }\n\n    let retN = null;\n    let retD = null;\n\n    // Iterate over all unique primes to determine if a consistent ratio exists\n    for (const prime in allPrimes) {\n\n      const baseExponent = baseFactors[prime] || C_ZERO;\n      const numberExponent = numberFactors[prime] || C_ZERO;\n\n      if (baseExponent === C_ZERO) {\n        if (numberExponent !== C_ZERO) {\n          return null; // Logarithm cannot be expressed as a rational number\n        }\n        continue; // Skip this prime since both exponents are zero\n      }\n\n      // Calculate the ratio of exponents for this prime\n      let curN = numberExponent;\n      let curD = baseExponent;\n\n      // Simplify the current ratio\n      const gcdValue = gcd(curN, curD);\n      curN /= gcdValue;\n      curD /= gcdValue;\n\n      // Check if this is the first ratio; otherwise, ensure ratios are consistent\n      if (retN === null && retD === null) {\n        retN = curN;\n        retD = curD;\n      } else if (curN * retD !== retN * curD) {\n        return null; // Ratios do not match, logarithm cannot be rational\n      }\n    }\n\n    return retN !== null && retD !== null\n      ? newFraction(retN, retD)\n      : null;\n  },\n\n  /**\n   * Check if two rational numbers are the same\n   *\n   * Ex: new Fraction(19.6).equals([98, 5]);\n   **/\n  \"equals\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is less than another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"lt\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] < P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is less than or equal another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"lte\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] <= P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is greater than another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"gt\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] > P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is greater than or equal another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"gte\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] >= P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Compare two rational numbers\n   * < 0 iff this < that\n   * > 0 iff this > that\n   * = 0 iff this = that\n   *\n   * Ex: new Fraction(19.6).compare([98, 5]);\n   **/\n  \"compare\": function (a, b) {\n\n    parse(a, b);\n    let t = this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"];\n\n    return (C_ZERO < t) - (t < C_ZERO);\n  },\n\n  /**\n   * Calculates the ceil of a rational number\n   *\n   * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n   **/\n  \"ceil\": function (places) {\n\n    places = C_TEN ** BigInt(places || 0);\n\n    return newFraction(ifloor(this[\"s\"] * places * this[\"n\"] / this[\"d\"]) +\n      (places * this[\"n\"] % this[\"d\"] > C_ZERO && this[\"s\"] >= C_ZERO ? C_ONE : C_ZERO),\n      places);\n  },\n\n  /**\n   * Calculates the floor of a rational number\n   *\n   * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n   **/\n  \"floor\": function (places) {\n\n    places = C_TEN ** BigInt(places || 0);\n\n    return newFraction(ifloor(this[\"s\"] * places * this[\"n\"] / this[\"d\"]) -\n      (places * this[\"n\"] % this[\"d\"] > C_ZERO && this[\"s\"] < C_ZERO ? C_ONE : C_ZERO),\n      places);\n  },\n\n  /**\n   * Rounds a rational numbers\n   *\n   * Ex: new Fraction('4.(3)').round() => (4 / 1)\n   **/\n  \"round\": function (places) {\n\n    places = C_TEN ** BigInt(places || 0);\n\n    /* Derivation:\n\n    s >= 0:\n      round(n / d) = ifloor(n / d) + (n % d) / d >= 0.5 ? 1 : 0\n                   = ifloor(n / d) + 2(n % d) >= d ? 1 : 0\n    s < 0:\n      round(n / d) =-ifloor(n / d) - (n % d) / d > 0.5 ? 1 : 0\n                   =-ifloor(n / d) - 2(n % d) > d ? 1 : 0\n\n    =>:\n\n    round(s * n / d) = s * ifloor(n / d) + s * (C + 2(n % d) > d ? 1 : 0)\n        where C = s >= 0 ? 1 : 0, to fix the >= for the positve case.\n    */\n\n    return newFraction(ifloor(this[\"s\"] * places * this[\"n\"] / this[\"d\"]) +\n      this[\"s\"] * ((this[\"s\"] >= C_ZERO ? C_ONE : C_ZERO) + C_TWO * (places * this[\"n\"] % this[\"d\"]) > this[\"d\"] ? C_ONE : C_ZERO),\n      places);\n  },\n\n  /**\n    * Rounds a rational number to a multiple of another rational number\n    *\n    * Ex: new Fraction('0.9').roundTo(\"1/8\") => 7 / 8\n    **/\n  \"roundTo\": function (a, b) {\n\n    /*\n    k * x/y â¤ a/b < (k+1) * x/y\n    â k â¤ a/b / (x/y) < (k+1)\n    â k = floor(a/b * y/x)\n    â k = floor((a * y) / (b * x))\n    */\n\n    parse(a, b);\n\n    const n = this['n'] * P['d'];\n    const d = this['d'] * P['n'];\n    const r = n % d;\n\n    // round(n / d) = ifloor(n / d) + 2(n % d) >= d ? 1 : 0\n    let k = ifloor(n / d);\n    if (r + r >= d) {\n      k++;\n    }\n    return newFraction(this['s'] * k * P['n'], P['d']);\n  },\n\n  /**\n   * Check if two rational numbers are divisible\n   *\n   * Ex: new Fraction(19.6).divisible(1.5);\n   */\n  \"divisible\": function (a, b) {\n\n    parse(a, b);\n    if (P['n'] === C_ZERO) return false;\n    return (this['n'] * P['d']) % (P['n'] * this['d']) === C_ZERO;\n  },\n\n  /**\n   * Returns a decimal representation of the fraction\n   *\n   * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n   **/\n  'valueOf': function () {\n    //if (this['n'] <= MAX_INTEGER && this['d'] <= MAX_INTEGER) {\n    return Number(this['s'] * this['n']) / Number(this['d']);\n    //}\n  },\n\n  /**\n   * Creates a string representation of a fraction with all digits\n   *\n   * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n   **/\n  'toString': function (dec = 15) {\n\n    let N = this[\"n\"];\n    let D = this[\"d\"];\n\n    let cycLen = cycleLen(N, D); // Cycle length\n    let cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n    let str = this['s'] < C_ZERO ? \"-\" : \"\";\n\n    // Append integer part\n    str += ifloor(N / D);\n\n    N %= D;\n    N *= C_TEN;\n\n    if (N)\n      str += \".\";\n\n    if (cycLen) {\n\n      for (let i = cycOff; i--;) {\n        str += ifloor(N / D);\n        N %= D;\n        N *= C_TEN;\n      }\n      str += \"(\";\n      for (let i = cycLen; i--;) {\n        str += ifloor(N / D);\n        N %= D;\n        N *= C_TEN;\n      }\n      str += \")\";\n    } else {\n      for (let i = dec; N && i--;) {\n        str += ifloor(N / D);\n        N %= D;\n        N *= C_TEN;\n      }\n    }\n    return str;\n  },\n\n  /**\n   * Returns a string-fraction representation of a Fraction object\n   *\n   * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n   **/\n  'toFraction': function (showMixed = false) {\n\n    let n = this[\"n\"];\n    let d = this[\"d\"];\n    let str = this['s'] < C_ZERO ? \"-\" : \"\";\n\n    if (d === C_ONE) {\n      str += n;\n    } else {\n      const whole = ifloor(n / d);\n      if (showMixed && whole > C_ZERO) {\n        str += whole;\n        str += \" \";\n        n %= d;\n      }\n\n      str += n;\n      str += '/';\n      str += d;\n    }\n    return str;\n  },\n\n  /**\n   * Returns a latex representation of a Fraction object\n   *\n   * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n   **/\n  'toLatex': function (showMixed = false) {\n\n    let n = this[\"n\"];\n    let d = this[\"d\"];\n    let str = this['s'] < C_ZERO ? \"-\" : \"\";\n\n    if (d === C_ONE) {\n      str += n;\n    } else {\n      const whole = ifloor(n / d);\n      if (showMixed && whole > C_ZERO) {\n        str += whole;\n        n %= d;\n      }\n\n      str += \"\\\\frac{\";\n      str += n;\n      str += '}{';\n      str += d;\n      str += '}';\n    }\n    return str;\n  },\n\n  /**\n   * Returns an array of continued fraction elements\n   *\n   * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n   */\n  'toContinued': function () {\n\n    let a = this['n'];\n    let b = this['d'];\n    const res = [];\n\n    while (b) {\n      res.push(ifloor(a / b));\n      const t = a % b;\n      a = b;\n      b = t;\n    }\n    return res;\n  },\n\n  \"simplify\": function (eps = 1e-3) {\n\n    // Continued fractions give best approximations for a max denominator,\n    // generally outperforming mediants in denominatorâaccuracy trade-offs.\n    // Semiconvergents can further reduce the denominator within tolerance.\n\n    const ieps = BigInt(Math.ceil(1 / eps));\n\n    const thisABS = this['abs']();\n    const cont = thisABS['toContinued']();\n\n    for (let i = 1; i < cont.length; i++) {\n\n      let s = newFraction(cont[i - 1], C_ONE);\n      for (let k = i - 2; k >= 0; k--) {\n        s = s['inverse']()['add'](cont[k]);\n      }\n\n      let t = s['sub'](thisABS);\n      if (t['n'] * ieps < t['d']) { // More robust than Math.abs(t.valueOf()) < eps\n        return s['mul'](this['s']);\n      }\n    }\n    return this;\n  }\n};\nexport {\n  Fraction as default, Fraction\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6237, "column": 0}, "map": {"version":3,"file":"typed-function.mjs","sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/typed-function/src/typed-function.mjs"],"sourcesContent":["function ok () {\n  return true\n}\n\nfunction notOk () {\n  return false\n}\n\nfunction undef () {\n  return undefined\n}\n\nconst NOT_TYPED_FUNCTION = 'Argument is not a typed-function.'\n\n/**\n * @typedef {{\n *   params: Param[],\n *   fn: function,\n *   test: function,\n *   implementation: function\n * }} Signature\n *\n * @typedef {{\n *   types: Type[],\n *   hasAny: boolean,\n *   hasConversion: boolean,\n *   restParam: boolean\n * }} Param\n *\n * @typedef {{\n *   name: string,\n *   typeIndex: number,\n *   test: function,\n *   isAny: boolean,\n *   conversion?: ConversionDef,\n *   conversionIndex: number,\n * }} Type\n *\n * @typedef {{\n *   from: string,\n *   to: string,\n *   convert: function (*) : *\n * }} ConversionDef\n *\n * @typedef {{\n *   name: string,\n *   test: function(*) : boolean,\n *   isAny?: boolean\n * }} TypeDef\n */\n\n/**\n * @returns {() => function}\n */\nfunction create () {\n  // data type tests\n\n  /**\n   * Returns true if the argument is a non-null \"plain\" object\n   */\n  function isPlainObject (x) {\n    return typeof x === 'object' && x !== null && x.constructor === Object\n  }\n\n  const _types = [\n    { name: 'number', test: function (x) { return typeof x === 'number' } },\n    { name: 'string', test: function (x) { return typeof x === 'string' } },\n    { name: 'boolean', test: function (x) { return typeof x === 'boolean' } },\n    { name: 'Function', test: function (x) { return typeof x === 'function' } },\n    { name: 'Array', test: Array.isArray },\n    { name: 'Date', test: function (x) { return x instanceof Date } },\n    { name: 'RegExp', test: function (x) { return x instanceof RegExp } },\n    { name: 'Object', test: isPlainObject },\n    { name: 'null', test: function (x) { return x === null } },\n    { name: 'undefined', test: function (x) { return x === undefined } }\n  ]\n\n  const anyType = {\n    name: 'any',\n    test: ok,\n    isAny: true\n  }\n\n  // Data structures to track the types. As these are local variables in\n  // create(), each typed universe will get its own copy, but the variables\n  // will only be accessible through the (closures of the) functions supplied\n  // as properties of the typed object, not directly.\n  // These will be initialized in clear() below\n  let typeMap // primary store of all types\n  let typeList // Array of just type names, for the sake of ordering\n\n  // And similar data structures for the type conversions:\n  let nConversions = 0\n  // the actual conversions are stored on a property of the destination types\n\n  // This is a temporary object, will be replaced with a function at the end\n  let typed = { createCount: 0 }\n\n  /**\n   * Takes a type name and returns the corresponding official type object\n   * for that type.\n   *\n   * @param {string} typeName\n   * @returns {TypeDef} type\n   */\n  function findType (typeName) {\n    const type = typeMap.get(typeName)\n    if (type) {\n      return type\n    }\n    // Remainder is error handling\n    let message = 'Unknown type \"' + typeName + '\"'\n    const name = typeName.toLowerCase()\n    let otherName\n    for (otherName of typeList) {\n      if (otherName.toLowerCase() === name) {\n        message += '. Did you mean \"' + otherName + '\" ?'\n        break\n      }\n    }\n    throw new TypeError(message)\n  }\n\n  /**\n   * Adds an array `types` of type definitions to this typed instance.\n   * Each type definition should be an object with properties:\n   * 'name' - a string giving the name of the type; 'test' - function\n   * returning a boolean that tests membership in the type; and optionally\n   * 'isAny' - true only for the 'any' type.\n   *\n   * The second optional argument, `before`, gives the name of a type that\n   * these types should be added before. The new types are added in the\n   * order specified.\n   * @param {TypeDef[]} types\n   * @param {string | boolean} [beforeSpec='any'] before\n   */\n  function addTypes (types, beforeSpec = 'any') {\n    const beforeIndex = beforeSpec\n      ? findType(beforeSpec).index\n      : typeList.length\n    const newTypes = []\n    for (let i = 0; i < types.length; ++i) {\n      if (!types[i] || typeof types[i].name !== 'string' ||\n        typeof types[i].test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected')\n      }\n      const typeName = types[i].name\n      if (typeMap.has(typeName)) {\n        throw new TypeError('Duplicate type name \"' + typeName + '\"')\n      }\n      newTypes.push(typeName)\n      typeMap.set(typeName, {\n        name: typeName,\n        test: types[i].test,\n        isAny: types[i].isAny,\n        index: beforeIndex + i,\n        conversionsTo: [] // Newly added type can't have any conversions to it\n      })\n    }\n    // update the typeList\n    const affectedTypes = typeList.slice(beforeIndex)\n    typeList =\n      typeList.slice(0, beforeIndex).concat(newTypes).concat(affectedTypes)\n    // Fix the indices\n    for (let i = beforeIndex + newTypes.length; i < typeList.length; ++i) {\n      typeMap.get(typeList[i]).index = i\n    }\n  }\n\n  /**\n   * Removes all types and conversions from this typed instance.\n   * May cause previously constructed typed-functions to throw\n   * strange errors when they are called with types that do not\n   * match any of their signatures.\n   */\n  function clear () {\n    typeMap = new Map()\n    typeList = []\n    nConversions = 0\n    addTypes([anyType], false)\n  }\n\n  // initialize the types to the default list\n  clear()\n  addTypes(_types)\n\n  /**\n   * Removes all conversions, leaving the types alone.\n   */\n  function clearConversions () {\n    let typeName\n    for (typeName of typeList) {\n      typeMap.get(typeName).conversionsTo = []\n    }\n    nConversions = 0\n  }\n\n  /**\n   * Find the type names that match a value.\n   * @param {*} value\n   * @return {string[]} Array of names of types for which\n   *                  the type test matches the value.\n   */\n  function findTypeNames (value) {\n    const matches = typeList.filter(name => {\n      const type = typeMap.get(name)\n      return !type.isAny && type.test(value)\n    })\n    if (matches.length) {\n      return matches\n    }\n    return ['any']\n  }\n\n  /**\n   * Check if an entity is a typed function created by any instance\n   * @param {any} entity\n   * @returns {boolean}\n   */\n  function isTypedFunction (entity) {\n    return entity && typeof entity === 'function' &&\n      '_typedFunctionData' in entity\n  }\n\n  /**\n   * Find a specific signature from a (composed) typed function, for example:\n   *\n   *   typed.findSignature(fn, ['number', 'string'])\n   *   typed.findSignature(fn, 'number, string')\n   *   typed.findSignature(fn, 'number,string', {exact: true})\n   *\n   * This function findSignature will by default return the best match to\n   * the given signature, possibly employing type conversions.\n   *\n   * The (optional) third argument is a plain object giving options\n   * controlling the signature search. Currently the only implemented\n   * option is `exact`: if specified as true (default is false), only\n   * exact matches will be returned (i.e. signatures for which `fn` was\n   * directly defined). Note that a (possibly different) type matching\n   * `any`, or one or more instances of TYPE matching `...TYPE` are\n   * considered exact matches in this regard, as no conversions are used.\n   *\n   * This function returns a \"signature\" object, as does `typed.resolve()`,\n   * which is a plain object with four keys: `params` (the array of parameters\n   * for this signature), `fn` (the originally supplied function for this\n   * signature), `test` (a generated function that determines if an argument\n   * list matches this signature, and `implementation` (the function to call\n   * on a matching argument list, that performs conversions if necessary and\n   * then calls the originally supplied function).\n   *\n   * @param {Function} fn                   A typed-function\n   * @param {string | string[]} signature\n   *     Signature to be found, can be an array or a comma separated string.\n   * @param {object} options  Controls the signature search as documented\n   * @return {{ params: Param[], fn: function, test: function, implementation: function }}\n   *     Returns the matching signature, or throws an error when no signature\n   *     is found.\n   */\n  function findSignature (fn, signature, options) {\n    if (!isTypedFunction(fn)) {\n      throw new TypeError(NOT_TYPED_FUNCTION)\n    }\n\n    // Canonicalize input\n    const exact = options && options.exact\n    const stringSignature = Array.isArray(signature)\n      ? signature.join(',')\n      : signature\n    const params = parseSignature(stringSignature)\n    const canonicalSignature = stringifyParams(params)\n\n    // First hope we get lucky and exactly match a signature\n    if (!exact || canonicalSignature in fn.signatures) {\n      // OK, we can check the internal signatures\n      const match =\n        fn._typedFunctionData.signatureMap.get(canonicalSignature)\n      if (match) {\n        return match\n      }\n    }\n\n    // Oh well, we did not; so we have to go back and check the parameters\n    // one by one, in order to catch things like `any` and rest params.\n    // Note here we can assume there is at least one parameter, because\n    // the empty signature would have matched successfully above.\n    const nParams = params.length\n    let remainingSignatures\n    if (exact) {\n      remainingSignatures = []\n      let name\n      for (name in fn.signatures) {\n        remainingSignatures.push(fn._typedFunctionData.signatureMap.get(name))\n      }\n    } else {\n      remainingSignatures = fn._typedFunctionData.signatures\n    }\n    for (let i = 0; i < nParams; ++i) {\n      const want = params[i]\n      const filteredSignatures = []\n      let possibility\n      for (possibility of remainingSignatures) {\n        const have = getParamAtIndex(possibility.params, i)\n        if (!have || (want.restParam && !have.restParam)) {\n          continue\n        }\n        if (!have.hasAny) {\n          // have to check all of the wanted types are available\n          const haveTypes = paramTypeSet(have)\n          if (want.types.some(wtype => !haveTypes.has(wtype.name))) {\n            continue\n          }\n        }\n        // OK, this looks good\n        filteredSignatures.push(possibility)\n      }\n      remainingSignatures = filteredSignatures\n      if (remainingSignatures.length === 0) break\n    }\n    // Return the first remaining signature that was totally matched:\n    let candidate\n    for (candidate of remainingSignatures) {\n      if (candidate.params.length <= nParams) {\n        return candidate\n      }\n    }\n\n    throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + stringifyParams(params, ', ') + '))')\n  }\n\n  /**\n   * Find the proper function to call for a specific signature from\n   * a (composed) typed function, for example:\n   *\n   *   typed.find(fn, ['number', 'string'])\n   *   typed.find(fn, 'number, string')\n   *   typed.find(fn, 'number,string', {exact: true})\n   *\n   * This function find will by default return the best match to\n   * the given signature, possibly employing type conversions (and returning\n   * a function that will perform those conversions as needed). The\n   * (optional) third argument is a plain object giving options contolling\n   * the signature search. Currently only the option `exact` is implemented,\n   * which defaults to \"false\". If `exact` is specified as true, then only\n   * exact matches will be returned (i.e. signatures for which `fn` was\n   * directly defined). Uses of `any` and `...TYPE` are considered exact if\n   * no conversions are necessary to apply the corresponding function.\n   *\n   * @param {Function} fn                   A typed-function\n   * @param {string | string[]} signature\n   *     Signature to be found, can be an array or a comma separated string.\n   * @param {object} options  Controls the signature match as documented\n   * @return {function}\n   *     Returns the function to call for the given signature, or throws an\n   *     error if no match is found.\n   */\n  function find (fn, signature, options) {\n    return findSignature(fn, signature, options).implementation\n  }\n\n  /**\n   * Convert a given value to another data type, specified by type name.\n   *\n   * @param {*} value\n   * @param {string} typeName\n   */\n  function convert (value, typeName) {\n    // check conversion is needed\n    const type = findType(typeName)\n    if (type.test(value)) {\n      return value\n    }\n    const conversions = type.conversionsTo\n    if (conversions.length === 0) {\n      throw new Error(\n        'There are no conversions to ' + typeName + ' defined.')\n    }\n    for (let i = 0; i < conversions.length; i++) {\n      const fromType = findType(conversions[i].from)\n      if (fromType.test(value)) {\n        return conversions[i].convert(value)\n      }\n    }\n\n    throw new Error('Cannot convert ' + value + ' to ' + typeName)\n  }\n\n  /**\n   * Stringify parameters in a normalized way\n   * @param {Param[]} params\n   * @param {string} [','] separator\n   * @return {string}\n   */\n  function stringifyParams (params, separator = ',') {\n    return params.map(p => p.name).join(separator)\n  }\n\n  /**\n   * Parse a parameter, like \"...number | boolean\"\n   * @param {string} param\n   * @return {Param} param\n   */\n  function parseParam (param) {\n    const restParam = param.indexOf('...') === 0\n    const types = (!restParam)\n      ? param\n      : (param.length > 3)\n          ? param.slice(3)\n          : 'any'\n\n    const typeDefs = types.split('|').map(s => findType(s.trim()))\n\n    let hasAny = false\n    let paramName = restParam ? '...' : ''\n\n    const exactTypes = typeDefs.map(function (type) {\n      hasAny = type.isAny || hasAny\n      paramName += type.name + '|'\n\n      return {\n        name: type.name,\n        typeIndex: type.index,\n        test: type.test,\n        isAny: type.isAny,\n        conversion: null,\n        conversionIndex: -1\n      }\n    })\n\n    return {\n      types: exactTypes,\n      name: paramName.slice(0, -1), // remove trailing '|' from above\n      hasAny,\n      hasConversion: false,\n      restParam\n    }\n  }\n\n  /**\n   * Expands a parsed parameter with the types available from currently\n   * defined conversions.\n   * @param {Param} param\n   * @return {Param} param\n   */\n  function expandParam (param) {\n    const typeNames = param.types.map(t => t.name)\n    const matchingConversions = availableConversions(typeNames)\n    let hasAny = param.hasAny\n    let newName = param.name\n\n    const convertibleTypes = matchingConversions.map(function (conversion) {\n      const type = findType(conversion.from)\n      hasAny = type.isAny || hasAny\n      newName += '|' + conversion.from\n\n      return {\n        name: conversion.from,\n        typeIndex: type.index,\n        test: type.test,\n        isAny: type.isAny,\n        conversion,\n        conversionIndex: conversion.index\n      }\n    })\n\n    return {\n      types: param.types.concat(convertibleTypes),\n      name: newName,\n      hasAny,\n      hasConversion: convertibleTypes.length > 0,\n      restParam: param.restParam\n    }\n  }\n\n  /**\n   * Return the set of type names in a parameter.\n   * Caches the result for efficiency\n   *\n   * @param {Param} param\n   * @return {Set<string>} typenames\n   */\n  function paramTypeSet (param) {\n    if (!param.typeSet) {\n      param.typeSet = new Set()\n      param.types.forEach(type => param.typeSet.add(type.name))\n    }\n    return param.typeSet\n  }\n\n  /**\n   * Parse a signature with comma separated parameters,\n   * like \"number | boolean, ...string\"\n   *\n   * @param {string} signature\n   * @return {Param[]} params\n   */\n  function parseSignature (rawSignature) {\n    const params = []\n    if (typeof rawSignature !== 'string') {\n      throw new TypeError('Signatures must be strings')\n    }\n    const signature = rawSignature.trim()\n    if (signature === '') {\n      return params\n    }\n\n    const rawParams = signature.split(',')\n    for (let i = 0; i < rawParams.length; ++i) {\n      const parsedParam = parseParam(rawParams[i].trim())\n      if (parsedParam.restParam && (i !== rawParams.length - 1)) {\n        throw new SyntaxError(\n          'Unexpected rest parameter \"' + rawParams[i] + '\": ' +\n          'only allowed for the last parameter')\n      }\n      // if invalid, short-circuit (all the types may have been filtered)\n      if (parsedParam.types.length === 0) {\n        return null\n      }\n      params.push(parsedParam)\n    }\n\n    return params\n  }\n\n  /**\n   * Test whether a set of params contains a restParam\n   * @param {Param[]} params\n   * @return {boolean} Returns true when the last parameter is a restParam\n   */\n  function hasRestParam (params) {\n    const param = last(params)\n    return param ? param.restParam : false\n  }\n\n  /**\n   * Create a type test for a single parameter, which can have one or multiple\n   * types.\n   * @param {Param} param\n   * @return {function(x: *) : boolean} Returns a test function\n   */\n  function compileTest (param) {\n    if (!param || param.types.length === 0) {\n      // nothing to do\n      return ok\n    } else if (param.types.length === 1) {\n      return findType(param.types[0].name).test\n    } else if (param.types.length === 2) {\n      const test0 = findType(param.types[0].name).test\n      const test1 = findType(param.types[1].name).test\n      return function or (x) {\n        return test0(x) || test1(x)\n      }\n    } else { // param.types.length > 2\n      const tests = param.types.map(function (type) {\n        return findType(type.name).test\n      })\n      return function or (x) {\n        for (let i = 0; i < tests.length; i++) {\n          if (tests[i](x)) {\n            return true\n          }\n        }\n        return false\n      }\n    }\n  }\n\n  /**\n   * Create a test for all parameters of a signature\n   * @param {Param[]} params\n   * @return {function(args: Array<*>) : boolean}\n   */\n  function compileTests (params) {\n    let tests, test0, test1\n\n    if (hasRestParam(params)) {\n      // variable arguments like '...number'\n      tests = initial(params).map(compileTest)\n      const varIndex = tests.length\n      const lastTest = compileTest(last(params))\n      const testRestParam = function (args) {\n        for (let i = varIndex; i < args.length; i++) {\n          if (!lastTest(args[i])) {\n            return false\n          }\n        }\n        return true\n      }\n\n      return function testArgs (args) {\n        for (let i = 0; i < tests.length; i++) {\n          if (!tests[i](args[i])) {\n            return false\n          }\n        }\n        return testRestParam(args) && (args.length >= varIndex + 1)\n      }\n    } else {\n      // no variable arguments\n      if (params.length === 0) {\n        return function testArgs (args) {\n          return args.length === 0\n        }\n      } else if (params.length === 1) {\n        test0 = compileTest(params[0])\n        return function testArgs (args) {\n          return test0(args[0]) && args.length === 1\n        }\n      } else if (params.length === 2) {\n        test0 = compileTest(params[0])\n        test1 = compileTest(params[1])\n        return function testArgs (args) {\n          return test0(args[0]) && test1(args[1]) && args.length === 2\n        }\n      } else { // arguments.length > 2\n        tests = params.map(compileTest)\n        return function testArgs (args) {\n          for (let i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false\n            }\n          }\n          return args.length === tests.length\n        }\n      }\n    }\n  }\n\n  /**\n   * Find the parameter at a specific index of a Params list.\n   * Handles rest parameters.\n   * @param {Param[]} params\n   * @param {number} index\n   * @return {Param | null} Returns the matching parameter when found,\n   *                        null otherwise.\n   */\n  function getParamAtIndex (params, index) {\n    return index < params.length\n      ? params[index]\n      : hasRestParam(params) ? last(params) : null\n  }\n\n  /**\n   * Get all type names of a parameter\n   * @param {Params[]} params\n   * @param {number} index\n   * @return {string[]} Returns an array with type names\n   */\n  function getTypeSetAtIndex (params, index) {\n    const param = getParamAtIndex(params, index)\n    if (!param) {\n      return new Set()\n    }\n    return paramTypeSet(param)\n  }\n\n  /**\n   * Test whether a type is an exact type or conversion\n   * @param {Type} type\n   * @return {boolean} Returns true when\n   */\n  function isExactType (type) {\n    return type.conversion === null || type.conversion === undefined\n  }\n\n  /**\n   * Helper function for creating error messages: create an array with\n   * all available types on a specific argument index.\n   * @param {Signature[]} signatures\n   * @param {number} index\n   * @return {string[]} Returns an array with available types\n   */\n  function mergeExpectedParams (signatures, index) {\n    const typeSet = new Set()\n    signatures.forEach(signature => {\n      const paramSet = getTypeSetAtIndex(signature.params, index)\n      let name\n      for (name of paramSet) {\n        typeSet.add(name)\n      }\n    })\n\n    return typeSet.has('any') ? ['any'] : Array.from(typeSet)\n  }\n\n  /**\n   * Create\n   * @param {string} name             The name of the function\n   * @param {array.<*>} args          The actual arguments passed to the function\n   * @param {Signature[]} signatures  A list with available signatures\n   * @return {TypeError} Returns a type error with additional data\n   *                     attached to it in the property `data`\n   */\n  function createError (name, args, signatures) {\n    let err, expected\n    const _name = name || 'unnamed'\n\n    // test for wrong type at some index\n    let matchingSignatures = signatures\n    let index\n    for (index = 0; index < args.length; index++) {\n      const nextMatchingDefs = []\n      matchingSignatures.forEach(signature => {\n        const param = getParamAtIndex(signature.params, index)\n        const test = compileTest(param)\n        if ((index < signature.params.length ||\n          hasRestParam(signature.params)) &&\n          test(args[index])) {\n          nextMatchingDefs.push(signature)\n        }\n      })\n\n      if (nextMatchingDefs.length === 0) {\n        // no matching signatures anymore, throw error \"wrong type\"\n        expected = mergeExpectedParams(matchingSignatures, index)\n        if (expected.length > 0) {\n          const actualTypes = findTypeNames(args[index])\n\n          err = new TypeError('Unexpected type of argument in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', actual: ' + actualTypes.join(' | ') + ', index: ' + index + ')')\n          err.data = {\n            category: 'wrongType',\n            fn: _name,\n            index,\n            actual: actualTypes,\n            expected\n          }\n          return err\n        }\n      } else {\n        matchingSignatures = nextMatchingDefs\n      }\n    }\n\n    // test for too few arguments\n    const lengths = matchingSignatures.map(function (signature) {\n      return hasRestParam(signature.params)\n        ? Infinity\n        : signature.params.length\n    })\n    if (args.length < Math.min.apply(null, lengths)) {\n      expected = mergeExpectedParams(matchingSignatures, index)\n      err = new TypeError('Too few arguments in function ' + _name +\n        ' (expected: ' + expected.join(' or ') +\n        ', index: ' + args.length + ')')\n      err.data = {\n        category: 'tooFewArgs',\n        fn: _name,\n        index: args.length,\n        expected\n      }\n      return err\n    }\n\n    // test for too many arguments\n    const maxLength = Math.max.apply(null, lengths)\n    if (args.length > maxLength) {\n      err = new TypeError('Too many arguments in function ' + _name +\n        ' (expected: ' + maxLength + ', actual: ' + args.length + ')')\n      err.data = {\n        category: 'tooManyArgs',\n        fn: _name,\n        index: args.length,\n        expectedLength: maxLength\n      }\n      return err\n    }\n\n    // Generic error\n    const argTypes = []\n    for (let i = 0; i < args.length; ++i) {\n      argTypes.push(findTypeNames(args[i]).join('|'))\n    }\n    err = new TypeError('Arguments of type \"' + argTypes.join(', ') +\n      '\" do not match any of the defined signatures of function ' + _name + '.')\n    err.data = {\n      category: 'mismatch',\n      actual: argTypes\n    }\n    return err\n  }\n\n  /**\n   * Find the lowest index of all exact types of a parameter (no conversions)\n   * @param {Param} param\n   * @return {number} Returns the index of the lowest type in typed.types\n   */\n  function getLowestTypeIndex (param) {\n    let min = typeList.length + 1\n\n    for (let i = 0; i < param.types.length; i++) {\n      if (isExactType(param.types[i])) {\n        min = Math.min(min, param.types[i].typeIndex)\n      }\n    }\n\n    return min\n  }\n\n  /**\n   * Find the lowest index of the conversion of all types of the parameter\n   * having a conversion\n   * @param {Param} param\n   * @return {number} Returns the lowest index of the conversions of this type\n   */\n  function getLowestConversionIndex (param) {\n    let min = nConversions + 1\n\n    for (let i = 0; i < param.types.length; i++) {\n      if (!isExactType(param.types[i])) {\n        min = Math.min(min, param.types[i].conversionIndex)\n      }\n    }\n\n    return min\n  }\n\n  /**\n   * Compare two params\n   * @param {Param} param1\n   * @param {Param} param2\n   * @return {number} returns -1 when param1 must get a lower\n   *                  index than param2, 1 when the opposite,\n   *                  or zero when both are equal\n   */\n  function compareParams (param1, param2) {\n    // We compare a number of metrics on a param in turn:\n    // 1) 'any' parameters are the least preferred\n    if (param1.hasAny) {\n      if (!param2.hasAny) {\n        return 1\n      }\n    } else if (param2.hasAny) {\n      return -1\n    }\n\n    // 2) Prefer non-rest to rest parameters\n    if (param1.restParam) {\n      if (!param2.restParam) {\n        return 1\n      }\n    } else if (param2.restParam) {\n      return -1\n    }\n\n    // 3) Prefer exact type match to conversions\n    if (param1.hasConversion) {\n      if (!param2.hasConversion) {\n        return 1\n      }\n    } else if (param2.hasConversion) {\n      return -1\n    }\n\n    // 4) Prefer lower type index:\n    const typeDiff = getLowestTypeIndex(param1) - getLowestTypeIndex(param2)\n    if (typeDiff < 0) {\n      return -1\n    }\n    if (typeDiff > 0) {\n      return 1\n    }\n\n    // 5) Prefer lower conversion index\n    const convDiff =\n      getLowestConversionIndex(param1) - getLowestConversionIndex(param2)\n    if (convDiff < 0) {\n      return -1\n    }\n    if (convDiff > 0) {\n      return 1\n    }\n\n    // Don't have a basis for preference\n    return 0\n  }\n\n  /**\n   * Compare two signatures\n   * @param {Signature} signature1\n   * @param {Signature} signature2\n   * @return {number} returns a negative number when param1 must get a lower\n   *                  index than param2, a positive number when the opposite,\n   *                  or zero when both are equal\n   */\n  function compareSignatures (signature1, signature2) {\n    const pars1 = signature1.params\n    const pars2 = signature2.params\n    const last1 = last(pars1)\n    const last2 = last(pars2)\n    const hasRest1 = hasRestParam(pars1)\n    const hasRest2 = hasRestParam(pars2)\n    // We compare a number of metrics on signatures in turn:\n    // 1) An \"any rest param\" is least preferred\n    if (hasRest1 && last1.hasAny) {\n      if (!hasRest2 || !last2.hasAny) {\n        return 1\n      }\n    } else if (hasRest2 && last2.hasAny) {\n      return -1\n    }\n\n    // 2) Minimize the number of 'any' parameters\n    let any1 = 0\n    let conv1 = 0\n    let par\n    for (par of pars1) {\n      if (par.hasAny) ++any1\n      if (par.hasConversion) ++conv1\n    }\n    let any2 = 0\n    let conv2 = 0\n    for (par of pars2) {\n      if (par.hasAny) ++any2\n      if (par.hasConversion) ++conv2\n    }\n    if (any1 !== any2) {\n      return any1 - any2\n    }\n\n    // 3) A conversion rest param is less preferred\n    if (hasRest1 && last1.hasConversion) {\n      if (!hasRest2 || !last2.hasConversion) {\n        return 1\n      }\n    } else if (hasRest2 && last2.hasConversion) {\n      return -1\n    }\n\n    // 4) Minimize the number of conversions\n    if (conv1 !== conv2) {\n      return conv1 - conv2\n    }\n\n    // 5) Prefer no rest param\n    if (hasRest1) {\n      if (!hasRest2) {\n        return 1\n      }\n    } else if (hasRest2) {\n      return -1\n    }\n\n    // 6) Prefer shorter with rest param, longer without\n    const lengthCriterion =\n      (pars1.length - pars2.length) * (hasRest1 ? -1 : 1)\n    if (lengthCriterion !== 0) {\n      return lengthCriterion\n    }\n\n    // Signatures are identical in each of the above metrics.\n    // In particular, they are the same length.\n    // We can therefore compare the parameters one by one.\n    // First we count which signature has more preferred parameters.\n    const comparisons = []\n    let tc = 0\n    for (let i = 0; i < pars1.length; ++i) {\n      const thisComparison = compareParams(pars1[i], pars2[i])\n      comparisons.push(thisComparison)\n      tc += thisComparison\n    }\n    if (tc !== 0) {\n      return tc\n    }\n\n    // They have the same number of preferred parameters, so go by the\n    // earliest parameter in which we have a preference.\n    // In other words, dispatch is driven somewhat more by earlier\n    // parameters than later ones.\n    let c\n    for (c of comparisons) {\n      if (c !== 0) {\n        return c\n      }\n    }\n\n    // It's a tossup:\n    return 0\n  }\n\n  /**\n   * Produce a list of all conversions from distinct types to one of\n   * the given types.\n   *\n   * @param {string[]} typeNames\n   * @return {ConversionDef[]} Returns the conversions that are available\n   *                        resulting in any given type (if any)\n   */\n  function availableConversions (typeNames) {\n    if (typeNames.length === 0) {\n      return []\n    }\n    const types = typeNames.map(findType)\n    if (typeNames.length > 1) {\n      types.sort((t1, t2) => t1.index - t2.index)\n    }\n    let matches = types[0].conversionsTo\n    if (typeNames.length === 1) {\n      return matches\n    }\n\n    matches = matches.concat([]) // shallow copy the matches\n    // Since the types are now in index order, we just want the first\n    // occurrence of any from type:\n    const knownTypes = new Set(typeNames)\n    for (let i = 1; i < types.length; ++i) {\n      let newMatch\n      for (newMatch of types[i].conversionsTo) {\n        if (!knownTypes.has(newMatch.from)) {\n          matches.push(newMatch)\n          knownTypes.add(newMatch.from)\n        }\n      }\n    }\n\n    return matches\n  }\n\n  /**\n   * Preprocess arguments before calling the original function:\n   * - if needed convert the parameters\n   * - in case of rest parameters, move the rest parameters into an Array\n   * @param {Param[]} params\n   * @param {function} fn\n   * @return {function} Returns a wrapped function\n   */\n  function compileArgsPreprocessing (params, fn) {\n    let fnConvert = fn\n\n    // TODO: can we make this wrapper function smarter/simpler?\n\n    if (params.some(p => p.hasConversion)) {\n      const restParam = hasRestParam(params)\n      const compiledConversions = params.map(compileArgConversion)\n\n      fnConvert = function convertArgs () {\n        const args = []\n        const last = restParam ? arguments.length - 1 : arguments.length\n        for (let i = 0; i < last; i++) {\n          args[i] = compiledConversions[i](arguments[i])\n        }\n        if (restParam) {\n          args[last] = arguments[last].map(compiledConversions[last])\n        }\n\n        return fn.apply(this, args)\n      }\n    }\n\n    let fnPreprocess = fnConvert\n    if (hasRestParam(params)) {\n      const offset = params.length - 1\n\n      fnPreprocess = function preprocessRestParams () {\n        return fnConvert.apply(this,\n          slice(arguments, 0, offset).concat([slice(arguments, offset)]))\n      }\n    }\n\n    return fnPreprocess\n  }\n\n  /**\n   * Compile conversion for a parameter to the right type\n   * @param {Param} param\n   * @return {function} Returns the wrapped function that will convert arguments\n   *\n   */\n  function compileArgConversion (param) {\n    let test0, test1, conversion0, conversion1\n    const tests = []\n    const conversions = []\n\n    param.types.forEach(function (type) {\n      if (type.conversion) {\n        tests.push(findType(type.conversion.from).test)\n        conversions.push(type.conversion.convert)\n      }\n    })\n\n    // create optimized conversion functions depending on the number of conversions\n    switch (conversions.length) {\n      case 0:\n        return function convertArg (arg) {\n          return arg\n        }\n\n      case 1:\n        test0 = tests[0]\n        conversion0 = conversions[0]\n        return function convertArg (arg) {\n          if (test0(arg)) {\n            return conversion0(arg)\n          }\n          return arg\n        }\n\n      case 2:\n        test0 = tests[0]\n        test1 = tests[1]\n        conversion0 = conversions[0]\n        conversion1 = conversions[1]\n        return function convertArg (arg) {\n          if (test0(arg)) {\n            return conversion0(arg)\n          }\n          if (test1(arg)) {\n            return conversion1(arg)\n          }\n          return arg\n        }\n\n      default:\n        return function convertArg (arg) {\n          for (let i = 0; i < conversions.length; i++) {\n            if (tests[i](arg)) {\n              return conversions[i](arg)\n            }\n          }\n          return arg\n        }\n    }\n  }\n\n  /**\n   * Split params with union types in to separate params.\n   *\n   * For example:\n   *\n   *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n   *     // returns:\n   *     // [\n   *     //   ['Array', 'string'],\n   *     //   ['Array', 'RegExp'],\n   *     //   ['Object', 'string'],\n   *     //   ['Object', 'RegExp']\n   *     // ]\n   *\n   * @param {Param[]} params\n   * @return {Param[]}\n   */\n  function splitParams (params) {\n    function _splitParams (params, index, paramsSoFar) {\n      if (index < params.length) {\n        const param = params[index]\n        let resultingParams = []\n\n        if (param.restParam) {\n          // split the types of a rest parameter in two:\n          // one with only exact types, and one with exact types and conversions\n          const exactTypes = param.types.filter(isExactType)\n          if (exactTypes.length < param.types.length) {\n            resultingParams.push({\n              types: exactTypes,\n              name: '...' + exactTypes.map(t => t.name).join('|'),\n              hasAny: exactTypes.some(t => t.isAny),\n              hasConversion: false,\n              restParam: true\n            })\n          }\n          resultingParams.push(param)\n        } else {\n          // split all the types of a regular parameter into one type per param\n          resultingParams = param.types.map(function (type) {\n            return {\n              types: [type],\n              name: type.name,\n              hasAny: type.isAny,\n              hasConversion: type.conversion,\n              restParam: false\n            }\n          })\n        }\n\n        // recurse over the groups with types\n        return flatMap(resultingParams, function (nextParam) {\n          return _splitParams(params, index + 1, paramsSoFar.concat([nextParam]))\n        })\n      } else {\n        // we've reached the end of the parameters.\n        return [paramsSoFar]\n      }\n    }\n\n    return _splitParams(params, 0, [])\n  }\n\n  /**\n   * Test whether two param lists represent conflicting signatures\n   * @param {Param[]} params1\n   * @param {Param[]} params2\n   * @return {boolean} Returns true when the signatures conflict, false otherwise.\n   */\n  function conflicting (params1, params2) {\n    const ii = Math.max(params1.length, params2.length)\n\n    for (let i = 0; i < ii; i++) {\n      const typeSet1 = getTypeSetAtIndex(params1, i)\n      const typeSet2 = getTypeSetAtIndex(params2, i)\n      let overlap = false\n      let name\n      for (name of typeSet2) {\n        if (typeSet1.has(name)) {\n          overlap = true\n          break\n        }\n      }\n      if (!overlap) {\n        return false\n      }\n    }\n\n    const len1 = params1.length\n    const len2 = params2.length\n    const restParam1 = hasRestParam(params1)\n    const restParam2 = hasRestParam(params2)\n\n    return restParam1\n      ? restParam2 ? (len1 === len2) : (len2 >= len1)\n      : restParam2 ? (len1 >= len2) : (len1 === len2)\n  }\n\n  /**\n   * Helper function for `resolveReferences` that returns a copy of\n   * functionList wihe any prior resolutions cleared out, in case we are\n   * recycling signatures from a prior typed function construction.\n   *\n   * @param {Array.<function|typed-reference>} functionList\n   * @return {Array.<function|typed-reference>}\n   */\n  function clearResolutions (functionList) {\n    return functionList.map(fn => {\n      if (isReferToSelf(fn)) {\n        return referToSelf(fn.referToSelf.callback)\n      }\n      if (isReferTo(fn)) {\n        return makeReferTo(fn.referTo.references, fn.referTo.callback)\n      }\n      return fn\n    })\n  }\n\n  /**\n   * Take a list of references, a list of functions functionList, and a\n   * signatureMap indexing signatures into functionList, and return\n   * the list of resolutions, or a false-y value if they don't all\n   * resolve in a valid way (yet).\n   *\n   * @param {string[]} references\n   * @param {Array<function|typed-reference} functionList\n   * @param {Object.<string, integer>} signatureMap\n   * @return {function[] | false} resolutions\n   */\n  function collectResolutions (references, functionList, signatureMap) {\n    const resolvedReferences = []\n    let reference\n    for (reference of references) {\n      let resolution = signatureMap[reference]\n      if (typeof resolution !== 'number') {\n        throw new TypeError(\n          'No definition for referenced signature \"' + reference + '\"')\n      }\n      resolution = functionList[resolution]\n      if (typeof resolution !== 'function') {\n        return false\n      }\n      resolvedReferences.push(resolution)\n    }\n    return resolvedReferences\n  }\n\n  /**\n   * Resolve any references in the functionList for the typed function\n   * itself. The signatureMap tells which index in the functionList a\n   * given signature should be mapped to (for use in resolving typed.referTo)\n   * and self provides the destions of a typed.referToSelf.\n   *\n   * @param {Array<function | typed-reference-object>} functionList\n   * @param {Object.<string, function>} signatureMap\n   * @param {function} self  The typed-function itself\n   * @return {Array<function>} The list of resolved functions\n   */\n  function resolveReferences (functionList, signatureMap, self) {\n    const resolvedFunctions = clearResolutions(functionList)\n    const isResolved = new Array(resolvedFunctions.length).fill(false)\n    let leftUnresolved = true\n    while (leftUnresolved) {\n      leftUnresolved = false\n      let nothingResolved = true\n      for (let i = 0; i < resolvedFunctions.length; ++i) {\n        if (isResolved[i]) continue\n        const fn = resolvedFunctions[i]\n\n        if (isReferToSelf(fn)) {\n          resolvedFunctions[i] = fn.referToSelf.callback(self)\n          // Preserve reference in case signature is reused someday:\n          resolvedFunctions[i].referToSelf = fn.referToSelf\n          isResolved[i] = true\n          nothingResolved = false\n        } else if (isReferTo(fn)) {\n          const resolvedReferences = collectResolutions(\n            fn.referTo.references, resolvedFunctions, signatureMap)\n          if (resolvedReferences) {\n            resolvedFunctions[i] =\n              fn.referTo.callback.apply(this, resolvedReferences)\n            // Preserve reference in case signature is reused someday:\n            resolvedFunctions[i].referTo = fn.referTo\n            isResolved[i] = true\n            nothingResolved = false\n          } else {\n            leftUnresolved = true\n          }\n        }\n      }\n\n      if (nothingResolved && leftUnresolved) {\n        throw new SyntaxError(\n          'Circular reference detected in resolving typed.referTo')\n      }\n    }\n\n    return resolvedFunctions\n  }\n\n  /**\n   * Validate whether any of the function bodies contains a self-reference\n   * usage like `this(...)` or `this.signatures`. This self-referencing is\n   * deprecated since typed-function v3. It has been replaced with\n   * the functions typed.referTo and typed.referToSelf.\n   * @param {Object.<string, function>} signaturesMap\n   */\n  function validateDeprecatedThis (signaturesMap) {\n    // TODO: remove this deprecation warning logic some day (it's introduced in v3)\n\n    // match occurrences like 'this(' and 'this.signatures'\n    const deprecatedThisRegex = /\\bthis(\\(|\\.signatures\\b)/\n\n    Object.keys(signaturesMap).forEach(signature => {\n      const fn = signaturesMap[signature]\n\n      if (deprecatedThisRegex.test(fn.toString())) {\n        throw new SyntaxError('Using `this` to self-reference a function ' +\n          'is deprecated since typed-function@3. ' +\n          'Use typed.referTo and typed.referToSelf instead.')\n      }\n    })\n  }\n\n  /**\n   * Create a typed function\n   * @param {String} name               The name for the typed function\n   * @param {Object.<string, function>} rawSignaturesMap\n   *                                    An object with one or\n   *                                    multiple signatures as key, and the\n   *                                    function corresponding to the\n   *                                    signature as value.\n   * @return {function}  Returns the created typed function.\n   */\n  function createTypedFunction (name, rawSignaturesMap) {\n    typed.createCount++\n\n    if (Object.keys(rawSignaturesMap).length === 0) {\n      throw new SyntaxError('No signatures provided')\n    }\n\n    if (typed.warnAgainstDeprecatedThis) {\n      validateDeprecatedThis(rawSignaturesMap)\n    }\n\n    // Main processing loop for signatures\n    const parsedParams = []\n    const originalFunctions = []\n    const signaturesMap = {}\n    const preliminarySignatures = [] // may have duplicates from conversions\n    let signature\n    for (signature in rawSignaturesMap) {\n      // A) Protect against polluted Object prototype:\n      if (!Object.prototype.hasOwnProperty.call(rawSignaturesMap, signature)) {\n        continue\n      }\n      // B) Parse the signature\n      const params = parseSignature(signature)\n      if (!params) continue\n      // C) Check for conflicts\n      parsedParams.forEach(function (pp) {\n        if (conflicting(pp, params)) {\n          throw new TypeError('Conflicting signatures \"' +\n            stringifyParams(pp) + '\" and \"' +\n            stringifyParams(params) + '\".')\n        }\n      })\n      parsedParams.push(params)\n      // D) Store the provided function and add conversions\n      const functionIndex = originalFunctions.length\n      originalFunctions.push(rawSignaturesMap[signature])\n      const conversionParams = params.map(expandParam)\n      // E) Split the signatures and collect them up\n      let sp\n      for (sp of splitParams(conversionParams)) {\n        const spName = stringifyParams(sp)\n        preliminarySignatures.push(\n          { params: sp, name: spName, fn: functionIndex })\n        if (sp.every(p => !p.hasConversion)) {\n          signaturesMap[spName] = functionIndex\n        }\n      }\n    }\n\n    preliminarySignatures.sort(compareSignatures)\n\n    // Note the forward reference to theTypedFn\n    const resolvedFunctions =\n      resolveReferences(originalFunctions, signaturesMap, theTypedFn)\n\n    // Fill in the proper function for each signature\n    let s\n    for (s in signaturesMap) {\n      if (Object.prototype.hasOwnProperty.call(signaturesMap, s)) {\n        signaturesMap[s] = resolvedFunctions[signaturesMap[s]]\n      }\n    }\n    const signatures = []\n    const internalSignatureMap = new Map() // benchmarks faster than object\n    for (s of preliminarySignatures) {\n      // Note it's only safe to eliminate duplicates like this\n      // _after_ the signature sorting step above; otherwise we might\n      // remove the wrong one.\n      if (!internalSignatureMap.has(s.name)) {\n        s.fn = resolvedFunctions[s.fn]\n        signatures.push(s)\n        internalSignatureMap.set(s.name, s)\n      }\n    }\n\n    // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n    const ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params)\n    const ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params)\n    const ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params)\n    const ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params)\n    const ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params)\n    const ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params)\n    const allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5\n\n    // compile the tests\n    for (let i = 0; i < signatures.length; ++i) {\n      signatures[i].test = compileTests(signatures[i].params)\n    }\n\n    const test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk\n    const test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk\n    const test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk\n    const test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk\n    const test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk\n    const test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk\n\n    const test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk\n    const test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk\n    const test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk\n    const test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk\n    const test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk\n    const test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk\n\n    // compile the functions\n    for (let i = 0; i < signatures.length; ++i) {\n      signatures[i].implementation =\n        compileArgsPreprocessing(signatures[i].params, signatures[i].fn)\n    }\n\n    const fn0 = ok0 ? signatures[0].implementation : undef\n    const fn1 = ok1 ? signatures[1].implementation : undef\n    const fn2 = ok2 ? signatures[2].implementation : undef\n    const fn3 = ok3 ? signatures[3].implementation : undef\n    const fn4 = ok4 ? signatures[4].implementation : undef\n    const fn5 = ok5 ? signatures[5].implementation : undef\n\n    const len0 = ok0 ? signatures[0].params.length : -1\n    const len1 = ok1 ? signatures[1].params.length : -1\n    const len2 = ok2 ? signatures[2].params.length : -1\n    const len3 = ok3 ? signatures[3].params.length : -1\n    const len4 = ok4 ? signatures[4].params.length : -1\n    const len5 = ok5 ? signatures[5].params.length : -1\n\n    // simple and generic, but also slow\n    const iStart = allOk ? 6 : 0\n    const iEnd = signatures.length\n    // de-reference ahead for execution speed:\n    const tests = signatures.map(s => s.test)\n    const fns = signatures.map(s => s.implementation)\n    const generic = function generic () {\n      'use strict'\n\n      for (let i = iStart; i < iEnd; i++) {\n        if (tests[i](arguments)) {\n          return fns[i].apply(this, arguments)\n        }\n      }\n\n      return typed.onMismatch(name, arguments, signatures)\n    }\n\n    // create the typed function\n    // fast, specialized version. Falls back to the slower, generic one if needed\n    function theTypedFn (arg0, arg1) {\n      'use strict'\n\n      if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(this, arguments) }\n      if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(this, arguments) }\n      if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(this, arguments) }\n      if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(this, arguments) }\n      if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(this, arguments) }\n      if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(this, arguments) }\n\n      return generic.apply(this, arguments)\n    }\n\n    // attach name the typed function\n    try {\n      Object.defineProperty(theTypedFn, 'name', { value: name })\n    } catch (err) {\n      // old browsers do not support Object.defineProperty and some don't support setting the name property\n      // the function name is not essential for the functioning, it's mostly useful for debugging,\n      // so it's fine to have unnamed functions.\n    }\n\n    // attach signatures to the function.\n    // This property is close to the original collection of signatures\n    // used to create the typed-function, just with unions split:\n    theTypedFn.signatures = signaturesMap\n\n    // Store internal data for functions like resolve, find, etc.\n    // Also serves as the flag that this is a typed-function\n    theTypedFn._typedFunctionData = {\n      signatures,\n      signatureMap: internalSignatureMap\n    }\n\n    return theTypedFn\n  }\n\n  /**\n   * Action to take on mismatch\n   * @param {string} name      Name of function that was attempted to be called\n   * @param {Array} args       Actual arguments to the call\n   * @param {Array} signatures Known signatures of the named typed-function\n   */\n  function _onMismatch (name, args, signatures) {\n    throw createError(name, args, signatures)\n  }\n\n  /**\n   * Return all but the last items of an array or function Arguments\n   * @param {Array | Arguments} arr\n   * @return {Array}\n   */\n  function initial (arr) {\n    return slice(arr, 0, arr.length - 1)\n  }\n\n  /**\n   * return the last item of an array or function Arguments\n   * @param {Array | Arguments} arr\n   * @return {*}\n   */\n  function last (arr) {\n    return arr[arr.length - 1]\n  }\n\n  /**\n   * Slice an array or function Arguments\n   * @param {Array | Arguments | IArguments} arr\n   * @param {number} start\n   * @param {number} [end]\n   * @return {Array}\n   */\n  function slice (arr, start, end) {\n    return Array.prototype.slice.call(arr, start, end)\n  }\n\n  /**\n   * Return the first item from an array for which test(arr[i]) returns true\n   * @param {Array} arr\n   * @param {function} test\n   * @return {* | undefined} Returns the first matching item\n   *                         or undefined when there is no match\n   */\n  function findInArray (arr, test) {\n    for (let i = 0; i < arr.length; i++) {\n      if (test(arr[i])) {\n        return arr[i]\n      }\n    }\n    return undefined\n  }\n\n  /**\n   * Flat map the result invoking a callback for every item in an array.\n   * https://gist.github.com/samgiles/762ee337dff48623e729\n   * @param {Array} arr\n   * @param {function} callback\n   * @return {Array}\n   */\n  function flatMap (arr, callback) {\n    return Array.prototype.concat.apply([], arr.map(callback))\n  }\n\n  /**\n   * Create a reference callback to one or multiple signatures\n   *\n   * Syntax:\n   *\n   *     typed.referTo(signature1, signature2, ..., function callback(fn1, fn2, ...) {\n   *       // ...\n   *     })\n   *\n   * @returns {{referTo: {references: string[], callback}}}\n   */\n  function referTo () {\n    const references =\n      initial(arguments).map(s => stringifyParams(parseSignature(s)))\n    const callback = last(arguments)\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback function expected as last argument')\n    }\n\n    return makeReferTo(references, callback)\n  }\n\n  function makeReferTo (references, callback) {\n    return { referTo: { references, callback } }\n  }\n\n  /**\n   * Create a reference callback to the typed-function itself\n   *\n   * @param {(self: function) => function} callback\n   * @returns {{referToSelf: { callback: function }}}\n   */\n  function referToSelf (callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback function expected as first argument')\n    }\n\n    return { referToSelf: { callback } }\n  }\n\n  /**\n   * Test whether something is a referTo object, holding a list with reference\n   * signatures and a callback.\n   *\n   * @param {Object | function} objectOrFn\n   * @returns {boolean}\n   */\n  function isReferTo (objectOrFn) {\n    return objectOrFn &&\n      typeof objectOrFn.referTo === 'object' &&\n      Array.isArray(objectOrFn.referTo.references) &&\n      typeof objectOrFn.referTo.callback === 'function'\n  }\n\n  /**\n   * Test whether something is a referToSelf object, holding a callback where\n   * to pass `self`.\n   *\n   * @param {Object | function} objectOrFn\n   * @returns {boolean}\n   */\n  function isReferToSelf (objectOrFn) {\n    return objectOrFn &&\n      typeof objectOrFn.referToSelf === 'object' &&\n      typeof objectOrFn.referToSelf.callback === 'function'\n  }\n\n  /**\n   * Check if name is (A) new, (B) a match, or (C) a mismatch; and throw\n   * an error in case (C).\n   *\n   * @param { string | undefined } nameSoFar\n   * @param { string | undefined } newName\n   * @returns { string } updated name\n   */\n  function checkName (nameSoFar, newName) {\n    if (!nameSoFar) {\n      return newName\n    }\n    if (newName && newName !== nameSoFar) {\n      const err = new Error('Function names do not match (expected: ' +\n        nameSoFar + ', actual: ' + newName + ')')\n      err.data = { actual: newName, expected: nameSoFar }\n      throw err\n    }\n    return nameSoFar\n  }\n\n  /**\n   * Retrieve the implied name from an object with signature keys\n   * and function values, checking whether all value names match\n   *\n   * @param { {string: function} } obj\n   */\n  function getObjectName (obj) {\n    let name\n    for (const key in obj) {\n      // Only pay attention to own properties, and only if their values\n      // are typed functions or functions with a signature property\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n        (isTypedFunction(obj[key]) ||\n          typeof obj[key].signature === 'string')) {\n        name = checkName(name, obj[key].name)\n      }\n    }\n    return name\n  }\n\n  /**\n   * Copy all of the signatures from the second argument into the first,\n   * which is modified by side effect, checking for conflicts\n   *\n   * @param {Object.<string, function|typed-reference>} dest\n   * @param {Object.<string, function|typed-reference>} source\n   */\n  function mergeSignatures (dest, source) {\n    let key\n    for (key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        if (key in dest) {\n          if (source[key] !== dest[key]) {\n            const err = new Error('Signature \"' + key + '\" is defined twice')\n            err.data = {\n              signature: key,\n              sourceFunction: source[key],\n              destFunction: dest[key]\n            }\n            throw err\n          }\n          // else: both signatures point to the same function, that's fine\n        }\n        dest[key] = source[key]\n      }\n    }\n  }\n\n  const saveTyped = typed\n\n  /**\n   * Originally the main function was a typed function itself, but then\n   * it might not be able to generate error messages if the client\n   * replaced the type system with different names.\n   *\n   * Main entry: typed([name], functions/objects with signatures...)\n   *\n   * Assembles and returns a new typed-function from the given items\n   * that provide signatures and implementations, each of which may be\n   * * a plain object mapping (string) signatures to implementing functions,\n   * * a previously constructed typed function, or\n   * * any other single function with a string-valued property `signature`.\n\n   * The name of the resulting typed-function will be given by the\n   * string-valued name argument if present, or if not, by the name\n   * of any of the arguments that have one, as long as any that do are\n   * consistent with each other. If no name is specified, the name will be\n   * an empty string.\n   *\n   * @param {string} maybeName [optional]\n   * @param {(function|object)[]} signature providers\n   * @returns {typed-function}\n   */\n  typed = function (maybeName) {\n    const named = typeof maybeName === 'string'\n    const start = named ? 1 : 0\n    let name = named ? maybeName : ''\n    const allSignatures = {}\n    for (let i = start; i < arguments.length; ++i) {\n      const item = arguments[i]\n      let theseSignatures = {}\n      let thisName\n      if (typeof item === 'function') {\n        thisName = item.name\n        if (typeof item.signature === 'string') {\n          // Case 1: Ordinary function with a string 'signature' property\n          theseSignatures[item.signature] = item\n        } else if (isTypedFunction(item)) {\n          // Case 2: Existing typed function\n          theseSignatures = item.signatures\n        }\n      } else if (isPlainObject(item)) {\n        // Case 3: Plain object, assume keys = signatures, values = functions\n        theseSignatures = item\n        if (!named) {\n          thisName = getObjectName(item)\n        }\n      }\n\n      if (Object.keys(theseSignatures).length === 0) {\n        const err = new TypeError(\n          'Argument to \\'typed\\' at index ' + i + ' is not a (typed) function, ' +\n          'nor an object with signatures as keys and functions as values.')\n        err.data = { index: i, argument: item }\n        throw err\n      }\n\n      if (!named) {\n        name = checkName(name, thisName)\n      }\n      mergeSignatures(allSignatures, theseSignatures)\n    }\n\n    return createTypedFunction(name || '', allSignatures)\n  }\n\n  typed.create = create\n  typed.createCount = saveTyped.createCount\n  typed.onMismatch = _onMismatch\n  typed.throwMismatchError = _onMismatch\n  typed.createError = createError\n  typed.clear = clear\n  typed.clearConversions = clearConversions\n  typed.addTypes = addTypes\n  typed._findType = findType // For unit testing only\n  typed.referTo = referTo\n  typed.referToSelf = referToSelf\n  typed.convert = convert\n  typed.findSignature = findSignature\n  typed.find = find\n  typed.isTypedFunction = isTypedFunction\n  typed.warnAgainstDeprecatedThis = true\n\n  /**\n   * add a type (convenience wrapper for typed.addTypes)\n   * @param {{name: string, test: function}} type\n   * @param {boolean} [beforeObjectTest=true]\n   *                          If true, the new test will be inserted before\n   *                          the test with name 'Object' (if any), since\n   *                          tests for Object match Array and classes too.\n   */\n  typed.addType = function (type, beforeObjectTest) {\n    let before = 'any'\n    if (beforeObjectTest !== false && typeMap.has('Object')) {\n      before = 'Object'\n    }\n    typed.addTypes([type], before)\n  }\n\n  /**\n   * Verify that the ConversionDef conversion has a valid format.\n   *\n   * @param {conversionDef} conversion\n   * @return {void}\n   * @throws {TypeError|SyntaxError}\n   */\n  function _validateConversion (conversion) {\n    if (!conversion ||\n      typeof conversion.from !== 'string' ||\n      typeof conversion.to !== 'string' ||\n      typeof conversion.convert !== 'function') {\n      throw new TypeError('Object with properties {from: string, to: string, convert: function} expected')\n    }\n    if (conversion.to === conversion.from) {\n      throw new SyntaxError(\n        'Illegal to define conversion from \"' + conversion.from +\n        '\" to itself.')\n    }\n  }\n\n  /**\n   * Add a conversion\n   *\n   * @param {ConversionDef} conversion\n   * @param {{override: boolean}} [options]\n   * @returns {void}\n   * @throws {TypeError}\n   */\n  typed.addConversion = function (conversion, options = { override: false }) {\n    _validateConversion(conversion)\n\n    const to = findType(conversion.to)\n    const existing = to.conversionsTo.find((other) => other.from === conversion.from)\n\n    if (existing) {\n      if (options && options.override) {\n        typed.removeConversion({ from: existing.from, to: conversion.to, convert: existing.convert })\n      } else {\n        throw new Error(\n          'There is already a conversion from \"' + conversion.from + '\" to \"' +\n          to.name + '\"')\n      }\n    }\n\n    to.conversionsTo.push({\n      from: conversion.from,\n      convert: conversion.convert,\n      index: nConversions++\n    })\n  }\n\n  /**\n   * Convenience wrapper to call addConversion on each conversion in a list.\n   *\n   * @param {ConversionDef[]} conversions\n   * @param {{override: boolean}} [options]\n   * @returns {void}\n   * @throws {TypeError}\n   */\n  typed.addConversions = function (conversions, options) {\n    conversions.forEach(conversion => typed.addConversion(conversion, options))\n  }\n\n  /**\n   * Remove the specified conversion. The format is the same as for\n   * addConversion, and the convert function must match or an error\n   * is thrown.\n   *\n   * @param {{from: string, to: string, convert: function}} conversion\n   * @returns {void}\n   * @throws {TypeError|SyntaxError|Error}\n   */\n  typed.removeConversion = function (conversion) {\n    _validateConversion(conversion)\n    const to = findType(conversion.to)\n    const existingConversion =\n      findInArray(to.conversionsTo, c => (c.from === conversion.from))\n    if (!existingConversion) {\n      throw new Error(\n        'Attempt to remove nonexistent conversion from ' + conversion.from +\n        ' to ' + conversion.to)\n    }\n    if (existingConversion.convert !== conversion.convert) {\n      throw new Error(\n        'Conversion to remove does not match existing conversion')\n    }\n    const index = to.conversionsTo.indexOf(existingConversion)\n    to.conversionsTo.splice(index, 1)\n  }\n\n  /**\n   * Produce the specific signature that a typed function\n   * will execute on the given arguments. Here, a \"signature\" is an\n   * object with properties 'params', 'test', 'fn', and 'implementation'.\n   * This last property is a function that converts params as necessary\n   * and then calls 'fn'. Returns null if there is no matching signature.\n   * @param {typed-function} tf\n   * @param {any[]} argList\n   * @returns {{params: string, test: function, fn: function, implementation: function}}\n   */\n  typed.resolve = function (tf, argList) {\n    if (!isTypedFunction(tf)) {\n      throw new TypeError(NOT_TYPED_FUNCTION)\n    }\n    const sigs = tf._typedFunctionData.signatures\n    for (let i = 0; i < sigs.length; ++i) {\n      if (sigs[i].test(argList)) {\n        return sigs[i]\n      }\n    }\n    return null\n  }\n\n  return typed\n}\n\nexport default create()\n"],"names":["ok","notOk","undef","undefined","NOT_TYPED_FUNCTION","create","isPlainObject","x","constructor","Object","_types","name","test","Array","isArray","Date","RegExp","anyType","isAny","typeMap","typeList","nConversions","typed","createCount","findType","typeName","type","get","message","toLowerCase","otherName","TypeError","addTypes","types","beforeSpec","arguments","length","beforeIndex","index","newTypes","i","has","push","set","conversionsTo","affectedTypes","slice","concat","clear","Map","clearConversions","findTypeNames","value","matches","filter","isTypedFunction","entity","findSignature","fn","signature","options","exact","stringSignature","join","params","parseSignature","canonicalSignature","stringifyParams","signatures","match","_typedFunctionData","signatureMap","nParams","remainingSignatures","want","filteredSignatures","possibility","have","getParamAtIndex","restParam","hasAny","haveTypes","paramTypeSet","some","wtype","candidate","find","implementation","convert","conversions","Error","fromType","from","separator","map","p","parseParam","param","indexOf","typeDefs","split","s","trim","paramName","exactTypes","typeIndex","conversion","conversionIndex","hasConversion","expandParam","typeNames","t","matchingConversions","availableConversions","newName","convertibleTypes","typeSet","Set","forEach","add","rawSignature","rawParams","parsedParam","SyntaxError","hasRestParam","last","compileTest","test0","test1","or","tests","compileTests","initial","varIndex","lastTest","testRestParam","args","testArgs","getTypeSetAtIndex","isExactType","mergeExpectedParams","paramSet","createError","err","expected","_name","matchingSignatures","nextMatchingDefs","actualTypes","data","category","actual","lengths","Infinity","Math","min","apply","maxLength","max","expectedLength","argTypes","getLowestTypeIndex","getLowestConversionIndex","compareParams","param1","param2","typeDiff","convDiff","compareSignatures","signature1","signature2","pars1","pars2","last1","last2","hasRest1","hasRest2","any1","conv1","par","any2","conv2","lengthCriterion","comparisons","tc","thisComparison","c","sort","t1","t2","knownTypes","newMatch","compileArgsPreprocessing","fnConvert","compiledConversions","compileArgConversion","convertArgs","fnPreprocess","offset","preprocessRestParams","conversion0","conversion1","convertArg","arg","splitParams","_splitParams","paramsSoFar","resultingParams","flatMap","nextParam","conflicting","params1","params2","ii","typeSet1","typeSet2","overlap","len1","len2","restParam1","restParam2","clearResolutions","functionList","isReferToSelf","referToSelf","callback","isReferTo","makeReferTo","referTo","references","collectResolutions","resolvedReferences","reference","resolution","resolveReferences","self","resolvedFunctions","isResolved","fill","leftUnresolved","nothingResolved","validateDeprecatedThis","signaturesMap","deprecatedThisRegex","keys","toString","createTypedFunction","rawSignaturesMap","warnAgainstDeprecatedThis","parsedParams","originalFunctions","preliminarySignatures","prototype","hasOwnProperty","call","pp","functionIndex","conversionParams","sp","spName","every","theTypedFn","internalSignatureMap","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fn0","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","fns","generic","onMismatch","arg0","arg1","defineProperty","_onMismatch","arr","start","end","findInArray","objectOrFn","checkName","nameSoFar","getObjectName","obj","key","mergeSignatures","dest","source","sourceFunction","destFunction","saveTyped","maybeName","named","allSignatures","item","theseSignatures","thisName","argument","throwMismatchError","_findType","addType","beforeObjectTest","before","_validateConversion","to","addConversion","override","existing","other","removeConversion","addConversions","existingConversion","splice","resolve","tf","argList","sigs"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8019, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/lib/alea.js"],"sourcesContent":["// A port of an algorithm by Johannes BaagÃ¸e <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes BaagÃ¸e <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8128, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/lib/xor128.js"],"sourcesContent":["// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n"],"names":[],"mappings":"AAAA,+DAA+D;AAC/D,gEAAgE;AAEhE,CAAC,SAAS,MAAM,EAAE,OAAM,EAAE,OAAM;IAEhC,SAAS,OAAO,IAAI;QAClB,IAAI,KAAK,IAAI,EAAE,UAAU;QAEzB,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QAEP,6BAA6B;QAC7B,GAAG,IAAI,GAAG;YACR,IAAI,IAAI,GAAG,CAAC,GAAI,GAAG,CAAC,IAAI;YACxB,GAAG,CAAC,GAAG,GAAG,CAAC;YACX,GAAG,CAAC,GAAG,GAAG,CAAC;YACX,GAAG,CAAC,GAAG,GAAG,CAAC;YACX,OAAO,GAAG,CAAC,IAAI,AAAC,GAAG,CAAC,KAAK,KAAM,IAAK,MAAM;QAC5C;QAEA,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG;YACvB,gBAAgB;YAChB,GAAG,CAAC,GAAG;QACT,OAAO;YACL,eAAe;YACf,WAAW;QACb;QAEA,kEAAkE;QAClE,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,IAAK;YAC5C,GAAG,CAAC,IAAI,QAAQ,UAAU,CAAC,KAAK;YAChC,GAAG,IAAI;QACT;IACF;IAEA,SAAS,KAAK,CAAC,EAAE,CAAC;QAChB,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,OAAO;IACT;IAEA,SAAS,KAAK,IAAI,EAAE,IAAI;QACtB,IAAI,KAAK,IAAI,OAAO,OAChB,QAAQ,QAAQ,KAAK,KAAK,EAC1B,OAAO;YAAa,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI;QAAa;QAChE,KAAK,MAAM,GAAG;YACZ,GAAG;gBACD,IAAI,MAAM,GAAG,IAAI,OAAO,IACpB,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,aAC1B,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE;YACrC,QAAS,WAAW,EAAG;YACvB,OAAO;QACT;QACA,KAAK,KAAK,GAAG,GAAG,IAAI;QACpB,KAAK,KAAK,GAAG;QACb,IAAI,OAAO;YACT,IAAI,OAAO,SAAU,UAAU,KAAK,OAAO;YAC3C,KAAK,KAAK,GAAG;gBAAa,OAAO,KAAK,IAAI,CAAC;YAAI;QACjD;QACA,OAAO;IACT;IAEA,IAAI,WAAU,QAAO,OAAO,EAAE;QAC5B,QAAO,OAAO,GAAG;IACnB,OAAO,IAAI,WAAU,QAAO,GAAG,EAAE;QAC/B,qDAAO;YAAa,OAAO;QAAM;IACnC,OAAO;QACL,IAAI,CAAC,MAAM,GAAG;IAChB;AAEA,CAAC,EACC,IAAI,EACJ,8CAAmB,YAAY,QAC/B,AAAC,OAAO,UAAW,cAAc,OAAS,6BAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8201, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/lib/xorwow.js"],"sourcesContent":["// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n"],"names":[],"mappings":"AAAA,+DAA+D;AAC/D,gEAAgE;AAEhE,CAAC,SAAS,MAAM,EAAE,OAAM,EAAE,OAAM;IAEhC,SAAS,OAAO,IAAI;QAClB,IAAI,KAAK,IAAI,EAAE,UAAU;QAEzB,6BAA6B;QAC7B,GAAG,IAAI,GAAG;YACR,IAAI,IAAK,GAAG,CAAC,GAAI,GAAG,CAAC,KAAK;YAC1B,GAAG,CAAC,GAAG,GAAG,CAAC;YAAE,GAAG,CAAC,GAAG,GAAG,CAAC;YAAE,GAAG,CAAC,GAAG,GAAG,CAAC;YAAE,GAAG,CAAC,GAAG,GAAG,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,GAAI,GAAG,CAAC,GAAG,SAAS,CAAE,IAC/B,CAAC,GAAG,CAAC,GAAG,AAAC,GAAG,CAAC,GAAI,GAAG,CAAC,IAAI,IAAM,CAAC,IAAK,KAAK,CAAE,CAAC,IAAI;QACtD;QAEA,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QAEP,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG;YACvB,gBAAgB;YAChB,GAAG,CAAC,GAAG;QACT,OAAO;YACL,eAAe;YACf,WAAW;QACb;QAEA,kEAAkE;QAClE,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,IAAK;YAC5C,GAAG,CAAC,IAAI,QAAQ,UAAU,CAAC,KAAK;YAChC,IAAI,KAAK,QAAQ,MAAM,EAAE;gBACvB,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK;YAC/B;YACA,GAAG,IAAI;QACT;IACF;IAEA,SAAS,KAAK,CAAC,EAAE,CAAC;QAChB,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,OAAO;IACT;IAEA,SAAS,KAAK,IAAI,EAAE,IAAI;QACtB,IAAI,KAAK,IAAI,OAAO,OAChB,QAAQ,QAAQ,KAAK,KAAK,EAC1B,OAAO;YAAa,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI;QAAa;QAChE,KAAK,MAAM,GAAG;YACZ,GAAG;gBACD,IAAI,MAAM,GAAG,IAAI,OAAO,IACpB,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,aAC1B,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE;YACrC,QAAS,WAAW,EAAG;YACvB,OAAO;QACT;QACA,KAAK,KAAK,GAAG,GAAG,IAAI;QACpB,KAAK,KAAK,GAAG;QACb,IAAI,OAAO;YACT,IAAI,OAAO,SAAU,UAAU,KAAK,OAAO;YAC3C,KAAK,KAAK,GAAG;gBAAa,OAAO,KAAK,IAAI,CAAC;YAAI;QACjD;QACA,OAAO;IACT;IAEA,IAAI,WAAU,QAAO,OAAO,EAAE;QAC5B,QAAO,OAAO,GAAG;IACnB,OAAO,IAAI,WAAU,QAAO,GAAG,EAAE;QAC/B,qDAAO;YAAa,OAAO;QAAM;IACnC,OAAO;QACL,IAAI,CAAC,MAAM,GAAG;IAChB;AAEA,CAAC,EACC,IAAI,EACJ,8CAAmB,YAAY,QAC/B,AAAC,OAAO,UAAW,cAAc,OAAS,6BAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8281, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/lib/xorshift7.js"],"sourcesContent":["// A Javascript implementaion of the \"xorshift7\" algorithm by\n// FranÃ§ois Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8376, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/lib/xor4096.js"],"sourcesContent":["// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8517, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/lib/tychei.js"],"sourcesContent":["// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,kCAAkC;AAClC,yDAAyD;AAEzD,CAAC,SAAS,MAAM,EAAE,OAAM,EAAE,OAAM;IAEhC,SAAS,OAAO,IAAI;QAClB,IAAI,KAAK,IAAI,EAAE,UAAU;QAEzB,6BAA6B;QAC7B,GAAG,IAAI,GAAG;YACR,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC;YAC1C,IAAI,AAAC,KAAK,KAAO,MAAM,IAAK;YAC5B,IAAI,AAAC,IAAI,IAAK;YACd,IAAI,AAAC,KAAK,KAAO,MAAM,IAAK;YAC5B,IAAI,AAAC,IAAI,IAAK;YACd,GAAG,CAAC,GAAG,IAAI,AAAC,KAAK,KAAO,MAAM,KAAM;YACpC,GAAG,CAAC,GAAG,IAAI,AAAC,IAAI,IAAK;YACrB,GAAG,CAAC,GAAG,AAAC,KAAK,KAAO,MAAM,KAAM;YAChC,OAAO,GAAG,CAAC,GAAG,AAAC,IAAI,IAAK;QAC1B;QAEA;;;;;;;;;;;;;;EAcA,GAEA,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG,aAAa;QACpB,GAAG,CAAC,GAAG;QAEP,IAAI,SAAS,KAAK,KAAK,CAAC,OAAO;YAC7B,gBAAgB;YAChB,GAAG,CAAC,GAAG,AAAC,OAAO,cAAe;YAC9B,GAAG,CAAC,GAAG,OAAO;QAChB,OAAO;YACL,eAAe;YACf,WAAW;QACb;QAEA,kEAAkE;QAClE,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,IAAK;YAC5C,GAAG,CAAC,IAAI,QAAQ,UAAU,CAAC,KAAK;YAChC,GAAG,IAAI;QACT;IACF;IAEA,SAAS,KAAK,CAAC,EAAE,CAAC;QAChB,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,EAAE,CAAC,GAAG,EAAE,CAAC;QACT,OAAO;IACT;;IAEA,SAAS,KAAK,IAAI,EAAE,IAAI;QACtB,IAAI,KAAK,IAAI,OAAO,OAChB,QAAQ,QAAQ,KAAK,KAAK,EAC1B,OAAO;YAAa,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI;QAAa;QAChE,KAAK,MAAM,GAAG;YACZ,GAAG;gBACD,IAAI,MAAM,GAAG,IAAI,OAAO,IACpB,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,aAC1B,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE;YACrC,QAAS,WAAW,EAAG;YACvB,OAAO;QACT;QACA,KAAK,KAAK,GAAG,GAAG,IAAI;QACpB,KAAK,KAAK,GAAG;QACb,IAAI,OAAO;YACT,IAAI,OAAO,SAAU,UAAU,KAAK,OAAO;YAC3C,KAAK,KAAK,GAAG;gBAAa,OAAO,KAAK,IAAI,CAAC;YAAI;QACjD;QACA,OAAO;IACT;IAEA,IAAI,WAAU,QAAO,OAAO,EAAE;QAC5B,QAAO,OAAO,GAAG;IACnB,OAAO,IAAI,WAAU,QAAO,GAAG,EAAE;QAC/B,qDAAO;YAAa,OAAO;QAAM;IACnC,OAAO;QACL,IAAI,CAAC,MAAM,GAAG;IAChB;AAEA,CAAC,EACC,IAAI,EACJ,8CAAmB,YAAY,QAC/B,AAAC,OAAO,UAAW,cAAc,OAAS,6BAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8611, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/seedrandom.js"],"sourcesContent":["/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8849, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/seedrandom/index.js"],"sourcesContent":["// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes BaagÃ¸e.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by FranÃ§ois Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,EAAE;AACF,SAAS;AACT,EAAE;AACF,0CAA0C;AAC1C,8CAA8C;AAC9C,+DAA+D;AAC/D,iEAAiE;AAEjE,mEAAmE;AACnE,iBAAiB;AACjB,uCAAuC;AACvC,IAAI;AAEJ,0DAA0D;AAC1D,mBAAmB;AACnB,+CAA+C;AAC/C,IAAI;AAEJ,mEAAmE;AACnE,qBAAqB;AACrB,8DAA8D;AAC9D,IAAI;AAEJ,6DAA6D;AAC7D,mEAAmE;AACnE,8DAA8D;AAC9D,kEAAkE;AAClE,kBAAkB;AAClB,4CAA4C;AAC5C,IAAI;AAEJ,4DAA4D;AAC5D,mEAAmE;AACnE,6DAA6D;AAC7D,0DAA0D;AAC1D,cAAc;AACd,uBAAuB;AACvB,4CAA4C;AAC5C,IAAI;AAEJ,uEAAuE;AACvE,gEAAgE;AAChE,qDAAqD;AACrD,iBAAiB;AACjB,4CAA4C;AAC5C,IAAI;AAEJ,yDAAyD;AACzD,kBAAkB;AAClB,IAAI;AAEJ,GAAG,IAAI,GAAG;AACV,GAAG,MAAM,GAAG;AACZ,GAAG,MAAM,GAAG;AACZ,GAAG,SAAS,GAAG;AACf,GAAG,OAAO,GAAG;AACb,GAAG,MAAM,GAAG;AAEZ,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8905, "column": 0}, "map": {"version":3,"sources":["file:///Users/uddeshyasingh/WebDev/personal-portfolio/node_modules/javascript-natural-sort/naturalSort.js"],"sourcesContent":["/*\r\n * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license\r\n * Author: Jim Palmer (based on chunking idea from Dave Koelle)\r\n */\r\n/*jshint unused:false */\r\nmodule.exports = function naturalSort (a, b) {\r\n\t\"use strict\";\r\n\tvar re = /(^([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\r\n\t\tsre = /(^[ ]*|[ ]*$)/g,\r\n\t\tdre = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\r\n\t\thre = /^0x[0-9a-f]+$/i,\r\n\t\tore = /^0/,\r\n\t\ti = function(s) { return naturalSort.insensitive && ('' + s).toLowerCase() || '' + s; },\r\n\t\t// convert all to strings strip whitespace\r\n\t\tx = i(a).replace(sre, '') || '',\r\n\t\ty = i(b).replace(sre, '') || '',\r\n\t\t// chunk/tokenize\r\n\t\txN = x.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\tyN = y.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\r\n\t\t// numeric, hex or date detection\r\n\t\txD = parseInt(x.match(hre), 16) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),\r\n\t\tyD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,\r\n\t\toFxNcL, oFyNcL;\r\n\t// first try and sort Hex codes or Dates\r\n\tif (yD) {\r\n\t\tif ( xD < yD ) { return -1; }\r\n\t\telse if ( xD > yD ) { return 1; }\r\n\t}\r\n\t// natural sorting through split numeric strings and default strings\r\n\tfor(var cLoc=0, numS=Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\r\n\t\t// find floats not starting with '0', string or 0 if not defined (Clint Priest)\r\n\t\toFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;\r\n\t\toFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0;\r\n\t\t// handle numeric vs string comparison - number < string - (Kyle Adams)\r\n\t\tif (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }\r\n\t\t// rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\r\n\t\telse if (typeof oFxNcL !== typeof oFyNcL) {\r\n\t\t\toFxNcL += '';\r\n\t\t\toFyNcL += '';\r\n\t\t}\r\n\t\tif (oFxNcL < oFyNcL) { return -1; }\r\n\t\tif (oFxNcL > oFyNcL) { return 1; }\r\n\t}\r\n\treturn 0;\r\n};\r\n"],"names":[],"mappings":"AAAA;;;CAGC,GACD,sBAAsB,GACtB,OAAO,OAAO,GAAG,SAAS,YAAa,CAAC,EAAE,CAAC;IAC1C;IACA,IAAI,KAAK,+EACR,MAAM,kBACN,MAAM,kHACN,MAAM,kBACN,MAAM,MACN,IAAI,SAAS,CAAC;QAAI,OAAO,YAAY,WAAW,IAAI,CAAC,KAAK,CAAC,EAAE,WAAW,MAAM,KAAK;IAAG,GACtF,0CAA0C;IAC1C,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,OAAO,IAC7B,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,OAAO,IAC7B,iBAAiB;IACjB,KAAK,EAAE,OAAO,CAAC,IAAI,UAAU,OAAO,CAAC,OAAM,IAAI,OAAO,CAAC,OAAM,IAAI,KAAK,CAAC,OACvE,KAAK,EAAE,OAAO,CAAC,IAAI,UAAU,OAAO,CAAC,OAAM,IAAI,OAAO,CAAC,OAAM,IAAI,KAAK,CAAC,OACvE,iCAAiC;IACjC,KAAK,SAAS,EAAE,KAAK,CAAC,MAAM,OAAQ,GAAG,MAAM,KAAK,KAAK,EAAE,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,IAClF,KAAK,SAAS,EAAE,KAAK,CAAC,MAAM,OAAO,MAAM,EAAE,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,MAAM,MAC1E,QAAQ;IACT,wCAAwC;IACxC,IAAI,IAAI;QACP,IAAK,KAAK,IAAK;YAAE,OAAO,CAAC;QAAG,OACvB,IAAK,KAAK,IAAK;YAAE,OAAO;QAAG;IACjC;IACA,oEAAoE;IACpE,IAAI,IAAI,OAAK,GAAG,OAAK,KAAK,GAAG,CAAC,GAAG,MAAM,EAAE,GAAG,MAAM,GAAG,OAAO,MAAM,OAAQ;QACzE,+EAA+E;QAC/E,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK,CAAC,QAAQ,WAAW,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,KAAK,IAAI;QAC7E,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK,CAAC,QAAQ,WAAW,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC,KAAK,IAAI;QAC7E,uEAAuE;QACvE,IAAI,MAAM,YAAY,MAAM,SAAS;YAAE,OAAO,AAAC,MAAM,UAAW,IAAI,CAAC;QAAG,OAEnE,IAAI,OAAO,WAAW,OAAO,QAAQ;YACzC,UAAU;YACV,UAAU;QACX;QACA,IAAI,SAAS,QAAQ;YAAE,OAAO,CAAC;QAAG;QAClC,IAAI,SAAS,QAAQ;YAAE,OAAO;QAAG;IAClC;IACA,OAAO;AACR","ignoreList":[0],"debugId":null}}]
}